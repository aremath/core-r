State 0:
program' -> . program [ # ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On program shift to state 161
-- On ident shift to state 33
-- On exprs shift to state 162
-- On expr shift to state 164
-- On EOF reduce production exprs -> 

State 1:
expr -> WHILE . LPAREN expr RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 2

State 2:
expr -> WHILE LPAREN . expr RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 158

State 3:
expr -> TRUE . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> TRUE 
-- On USEROP reduce production expr -> TRUE 
-- On TRUE reduce production expr -> TRUE 
-- On TILDE reduce production expr -> TRUE 
-- On SEMICOLON reduce production expr -> TRUE 
-- On RSUPASSIGN reduce production expr -> TRUE 
-- On RPAREN reduce production expr -> TRUE 
-- On REPEAT reduce production expr -> TRUE 
-- On RBRACKET reduce production expr -> TRUE 
-- On RBRACE reduce production expr -> TRUE 
-- On RASSIGN reduce production expr -> TRUE 
-- On PLUS reduce production expr -> TRUE 
-- On OUTERPROD reduce production expr -> TRUE 
-- On ORVEC reduce production expr -> TRUE 
-- On OR reduce production expr -> TRUE 
-- On NULL reduce production expr -> TRUE 
-- On NEXT reduce production expr -> TRUE 
-- On NEQ reduce production expr -> TRUE 
-- On NA reduce production expr -> TRUE 
-- On MULT reduce production expr -> TRUE 
-- On MODULUS reduce production expr -> TRUE 
-- On MINUS reduce production expr -> TRUE 
-- On MATRIXMULT reduce production expr -> TRUE 
-- On LT reduce production expr -> TRUE 
-- On LPAREN reduce production expr -> TRUE 
-- On LISTSUBSET reduce production expr -> TRUE 
-- On LE reduce production expr -> TRUE 
-- On LBRACKET reduce production expr -> TRUE 
-- On LBRACE reduce production expr -> TRUE 
-- On KRONECKERPROD reduce production expr -> TRUE 
-- On INTDIV reduce production expr -> TRUE 
-- On INT reduce production expr -> TRUE 
-- On IF reduce production expr -> TRUE 
-- On IDENT reduce production expr -> TRUE 
-- On HELP reduce production expr -> TRUE 
-- On GT reduce production expr -> TRUE 
-- On GE reduce production expr -> TRUE 
-- On FUNCTION reduce production expr -> TRUE 
-- On FOR reduce production expr -> TRUE 
-- On FLOAT reduce production expr -> TRUE 
-- On FALSE reduce production expr -> TRUE 
-- On EXP reduce production expr -> TRUE 
-- On EQEQ reduce production expr -> TRUE 
-- On EOF reduce production expr -> TRUE 
-- On DIV reduce production expr -> TRUE 
-- On COMPLEX reduce production expr -> TRUE 
-- On COMMA reduce production expr -> TRUE 
-- On COLON reduce production expr -> TRUE 
-- On BREAK reduce production expr -> TRUE 
-- On BANG reduce production expr -> TRUE 
-- On ATTRIBUTE reduce production expr -> TRUE 
-- On ANDVEC reduce production expr -> TRUE 
-- On AND reduce production expr -> TRUE 

State 4:
expr -> TILDE . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 157

State 5:
expr -> REPEAT . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 156

State 6:
expr -> PLUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 155

State 7:
expr -> NULL . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> NULL 
-- On USEROP reduce production expr -> NULL 
-- On TRUE reduce production expr -> NULL 
-- On TILDE reduce production expr -> NULL 
-- On SEMICOLON reduce production expr -> NULL 
-- On RSUPASSIGN reduce production expr -> NULL 
-- On RPAREN reduce production expr -> NULL 
-- On REPEAT reduce production expr -> NULL 
-- On RBRACKET reduce production expr -> NULL 
-- On RBRACE reduce production expr -> NULL 
-- On RASSIGN reduce production expr -> NULL 
-- On PLUS reduce production expr -> NULL 
-- On OUTERPROD reduce production expr -> NULL 
-- On ORVEC reduce production expr -> NULL 
-- On OR reduce production expr -> NULL 
-- On NULL reduce production expr -> NULL 
-- On NEXT reduce production expr -> NULL 
-- On NEQ reduce production expr -> NULL 
-- On NA reduce production expr -> NULL 
-- On MULT reduce production expr -> NULL 
-- On MODULUS reduce production expr -> NULL 
-- On MINUS reduce production expr -> NULL 
-- On MATRIXMULT reduce production expr -> NULL 
-- On LT reduce production expr -> NULL 
-- On LPAREN reduce production expr -> NULL 
-- On LISTSUBSET reduce production expr -> NULL 
-- On LE reduce production expr -> NULL 
-- On LBRACKET reduce production expr -> NULL 
-- On LBRACE reduce production expr -> NULL 
-- On KRONECKERPROD reduce production expr -> NULL 
-- On INTDIV reduce production expr -> NULL 
-- On INT reduce production expr -> NULL 
-- On IF reduce production expr -> NULL 
-- On IDENT reduce production expr -> NULL 
-- On HELP reduce production expr -> NULL 
-- On GT reduce production expr -> NULL 
-- On GE reduce production expr -> NULL 
-- On FUNCTION reduce production expr -> NULL 
-- On FOR reduce production expr -> NULL 
-- On FLOAT reduce production expr -> NULL 
-- On FALSE reduce production expr -> NULL 
-- On EXP reduce production expr -> NULL 
-- On EQEQ reduce production expr -> NULL 
-- On EOF reduce production expr -> NULL 
-- On DIV reduce production expr -> NULL 
-- On COMPLEX reduce production expr -> NULL 
-- On COMMA reduce production expr -> NULL 
-- On COLON reduce production expr -> NULL 
-- On BREAK reduce production expr -> NULL 
-- On BANG reduce production expr -> NULL 
-- On ATTRIBUTE reduce production expr -> NULL 
-- On ANDVEC reduce production expr -> NULL 
-- On AND reduce production expr -> NULL 

State 8:
expr -> NEXT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> NEXT 
-- On USEROP reduce production expr -> NEXT 
-- On TRUE reduce production expr -> NEXT 
-- On TILDE reduce production expr -> NEXT 
-- On SEMICOLON reduce production expr -> NEXT 
-- On RSUPASSIGN reduce production expr -> NEXT 
-- On RPAREN reduce production expr -> NEXT 
-- On REPEAT reduce production expr -> NEXT 
-- On RBRACKET reduce production expr -> NEXT 
-- On RBRACE reduce production expr -> NEXT 
-- On RASSIGN reduce production expr -> NEXT 
-- On PLUS reduce production expr -> NEXT 
-- On OUTERPROD reduce production expr -> NEXT 
-- On ORVEC reduce production expr -> NEXT 
-- On OR reduce production expr -> NEXT 
-- On NULL reduce production expr -> NEXT 
-- On NEXT reduce production expr -> NEXT 
-- On NEQ reduce production expr -> NEXT 
-- On NA reduce production expr -> NEXT 
-- On MULT reduce production expr -> NEXT 
-- On MODULUS reduce production expr -> NEXT 
-- On MINUS reduce production expr -> NEXT 
-- On MATRIXMULT reduce production expr -> NEXT 
-- On LT reduce production expr -> NEXT 
-- On LPAREN reduce production expr -> NEXT 
-- On LISTSUBSET reduce production expr -> NEXT 
-- On LE reduce production expr -> NEXT 
-- On LBRACKET reduce production expr -> NEXT 
-- On LBRACE reduce production expr -> NEXT 
-- On KRONECKERPROD reduce production expr -> NEXT 
-- On INTDIV reduce production expr -> NEXT 
-- On INT reduce production expr -> NEXT 
-- On IF reduce production expr -> NEXT 
-- On IDENT reduce production expr -> NEXT 
-- On HELP reduce production expr -> NEXT 
-- On GT reduce production expr -> NEXT 
-- On GE reduce production expr -> NEXT 
-- On FUNCTION reduce production expr -> NEXT 
-- On FOR reduce production expr -> NEXT 
-- On FLOAT reduce production expr -> NEXT 
-- On FALSE reduce production expr -> NEXT 
-- On EXP reduce production expr -> NEXT 
-- On EQEQ reduce production expr -> NEXT 
-- On EOF reduce production expr -> NEXT 
-- On DIV reduce production expr -> NEXT 
-- On COMPLEX reduce production expr -> NEXT 
-- On COMMA reduce production expr -> NEXT 
-- On COLON reduce production expr -> NEXT 
-- On BREAK reduce production expr -> NEXT 
-- On BANG reduce production expr -> NEXT 
-- On ATTRIBUTE reduce production expr -> NEXT 
-- On ANDVEC reduce production expr -> NEXT 
-- On AND reduce production expr -> NEXT 

State 9:
expr -> NA . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> NA 
-- On USEROP reduce production expr -> NA 
-- On TRUE reduce production expr -> NA 
-- On TILDE reduce production expr -> NA 
-- On SEMICOLON reduce production expr -> NA 
-- On RSUPASSIGN reduce production expr -> NA 
-- On RPAREN reduce production expr -> NA 
-- On REPEAT reduce production expr -> NA 
-- On RBRACKET reduce production expr -> NA 
-- On RBRACE reduce production expr -> NA 
-- On RASSIGN reduce production expr -> NA 
-- On PLUS reduce production expr -> NA 
-- On OUTERPROD reduce production expr -> NA 
-- On ORVEC reduce production expr -> NA 
-- On OR reduce production expr -> NA 
-- On NULL reduce production expr -> NA 
-- On NEXT reduce production expr -> NA 
-- On NEQ reduce production expr -> NA 
-- On NA reduce production expr -> NA 
-- On MULT reduce production expr -> NA 
-- On MODULUS reduce production expr -> NA 
-- On MINUS reduce production expr -> NA 
-- On MATRIXMULT reduce production expr -> NA 
-- On LT reduce production expr -> NA 
-- On LPAREN reduce production expr -> NA 
-- On LISTSUBSET reduce production expr -> NA 
-- On LE reduce production expr -> NA 
-- On LBRACKET reduce production expr -> NA 
-- On LBRACE reduce production expr -> NA 
-- On KRONECKERPROD reduce production expr -> NA 
-- On INTDIV reduce production expr -> NA 
-- On INT reduce production expr -> NA 
-- On IF reduce production expr -> NA 
-- On IDENT reduce production expr -> NA 
-- On HELP reduce production expr -> NA 
-- On GT reduce production expr -> NA 
-- On GE reduce production expr -> NA 
-- On FUNCTION reduce production expr -> NA 
-- On FOR reduce production expr -> NA 
-- On FLOAT reduce production expr -> NA 
-- On FALSE reduce production expr -> NA 
-- On EXP reduce production expr -> NA 
-- On EQEQ reduce production expr -> NA 
-- On EOF reduce production expr -> NA 
-- On DIV reduce production expr -> NA 
-- On COMPLEX reduce production expr -> NA 
-- On COMMA reduce production expr -> NA 
-- On COLON reduce production expr -> NA 
-- On BREAK reduce production expr -> NA 
-- On BANG reduce production expr -> NA 
-- On ATTRIBUTE reduce production expr -> NA 
-- On ANDVEC reduce production expr -> NA 
-- On AND reduce production expr -> NA 

State 10:
expr -> MINUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 154

State 11:
expr -> LBRACE . exprseq RBRACE [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On exprseq shift to state 147
-- On expr shift to state 149
-- On RBRACE reduce production exprseq -> 

State 12:
expr -> INT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> INT 
-- On USEROP reduce production expr -> INT 
-- On TRUE reduce production expr -> INT 
-- On TILDE reduce production expr -> INT 
-- On SEMICOLON reduce production expr -> INT 
-- On RSUPASSIGN reduce production expr -> INT 
-- On RPAREN reduce production expr -> INT 
-- On REPEAT reduce production expr -> INT 
-- On RBRACKET reduce production expr -> INT 
-- On RBRACE reduce production expr -> INT 
-- On RASSIGN reduce production expr -> INT 
-- On PLUS reduce production expr -> INT 
-- On OUTERPROD reduce production expr -> INT 
-- On ORVEC reduce production expr -> INT 
-- On OR reduce production expr -> INT 
-- On NULL reduce production expr -> INT 
-- On NEXT reduce production expr -> INT 
-- On NEQ reduce production expr -> INT 
-- On NA reduce production expr -> INT 
-- On MULT reduce production expr -> INT 
-- On MODULUS reduce production expr -> INT 
-- On MINUS reduce production expr -> INT 
-- On MATRIXMULT reduce production expr -> INT 
-- On LT reduce production expr -> INT 
-- On LPAREN reduce production expr -> INT 
-- On LISTSUBSET reduce production expr -> INT 
-- On LE reduce production expr -> INT 
-- On LBRACKET reduce production expr -> INT 
-- On LBRACE reduce production expr -> INT 
-- On KRONECKERPROD reduce production expr -> INT 
-- On INTDIV reduce production expr -> INT 
-- On INT reduce production expr -> INT 
-- On IF reduce production expr -> INT 
-- On IDENT reduce production expr -> INT 
-- On HELP reduce production expr -> INT 
-- On GT reduce production expr -> INT 
-- On GE reduce production expr -> INT 
-- On FUNCTION reduce production expr -> INT 
-- On FOR reduce production expr -> INT 
-- On FLOAT reduce production expr -> INT 
-- On FALSE reduce production expr -> INT 
-- On EXP reduce production expr -> INT 
-- On EQEQ reduce production expr -> INT 
-- On EOF reduce production expr -> INT 
-- On DIV reduce production expr -> INT 
-- On COMPLEX reduce production expr -> INT 
-- On COMMA reduce production expr -> INT 
-- On COLON reduce production expr -> INT 
-- On BREAK reduce production expr -> INT 
-- On BANG reduce production expr -> INT 
-- On ATTRIBUTE reduce production expr -> INT 
-- On ANDVEC reduce production expr -> INT 
-- On AND reduce production expr -> INT 

State 13:
expr -> IF . expr expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> IF . expr expr expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 136

State 14:
ident -> IDENT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LBRACE LASSIGN KRONECKERPROD INTDIV INT IN IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EQASSIGN EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
ident -> IDENT . COLON2 IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LBRACE LASSIGN KRONECKERPROD INTDIV INT IN IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EQASSIGN EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
ident -> IDENT . COLON3 IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LBRACE LASSIGN KRONECKERPROD INTDIV INT IN IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EQASSIGN EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On COLON3 shift to state 15
-- On COLON2 shift to state 17
-- On WHILE reduce production ident -> IDENT 
-- On USEROP reduce production ident -> IDENT 
-- On TRUE reduce production ident -> IDENT 
-- On TILDE reduce production ident -> IDENT 
-- On SEMICOLON reduce production ident -> IDENT 
-- On RSUPASSIGN reduce production ident -> IDENT 
-- On RPAREN reduce production ident -> IDENT 
-- On REPEAT reduce production ident -> IDENT 
-- On RBRACKET reduce production ident -> IDENT 
-- On RBRACE reduce production ident -> IDENT 
-- On RASSIGN reduce production ident -> IDENT 
-- On PLUS reduce production ident -> IDENT 
-- On OUTERPROD reduce production ident -> IDENT 
-- On ORVEC reduce production ident -> IDENT 
-- On OR reduce production ident -> IDENT 
-- On NULL reduce production ident -> IDENT 
-- On NEXT reduce production ident -> IDENT 
-- On NEQ reduce production ident -> IDENT 
-- On NA reduce production ident -> IDENT 
-- On MULT reduce production ident -> IDENT 
-- On MODULUS reduce production ident -> IDENT 
-- On MINUS reduce production ident -> IDENT 
-- On MATRIXMULT reduce production ident -> IDENT 
-- On LT reduce production ident -> IDENT 
-- On LSUPASSIGN reduce production ident -> IDENT 
-- On LPAREN reduce production ident -> IDENT 
-- On LISTSUBSET reduce production ident -> IDENT 
-- On LE reduce production ident -> IDENT 
-- On LBRACKET reduce production ident -> IDENT 
-- On LBRACE reduce production ident -> IDENT 
-- On LASSIGN reduce production ident -> IDENT 
-- On KRONECKERPROD reduce production ident -> IDENT 
-- On INTDIV reduce production ident -> IDENT 
-- On INT reduce production ident -> IDENT 
-- On IN reduce production ident -> IDENT 
-- On IF reduce production ident -> IDENT 
-- On IDENT reduce production ident -> IDENT 
-- On HELP reduce production ident -> IDENT 
-- On GT reduce production ident -> IDENT 
-- On GE reduce production ident -> IDENT 
-- On FUNCTION reduce production ident -> IDENT 
-- On FOR reduce production ident -> IDENT 
-- On FLOAT reduce production ident -> IDENT 
-- On FALSE reduce production ident -> IDENT 
-- On EXP reduce production ident -> IDENT 
-- On EQEQ reduce production ident -> IDENT 
-- On EQASSIGN reduce production ident -> IDENT 
-- On EOF reduce production ident -> IDENT 
-- On DIV reduce production ident -> IDENT 
-- On COMPLEX reduce production ident -> IDENT 
-- On COMMA reduce production ident -> IDENT 
-- On COLON reduce production ident -> IDENT 
-- On BREAK reduce production ident -> IDENT 
-- On BANG reduce production ident -> IDENT 
-- On ATTRIBUTE reduce production ident -> IDENT 
-- On ANDVEC reduce production ident -> IDENT 
-- On AND reduce production ident -> IDENT 

State 15:
ident -> IDENT COLON3 . IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LBRACE LASSIGN KRONECKERPROD INTDIV INT IN IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EQASSIGN EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 16

State 16:
ident -> IDENT COLON3 IDENT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LBRACE LASSIGN KRONECKERPROD INTDIV INT IN IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EQASSIGN EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production ident -> IDENT COLON3 IDENT 
-- On USEROP reduce production ident -> IDENT COLON3 IDENT 
-- On TRUE reduce production ident -> IDENT COLON3 IDENT 
-- On TILDE reduce production ident -> IDENT COLON3 IDENT 
-- On SEMICOLON reduce production ident -> IDENT COLON3 IDENT 
-- On RSUPASSIGN reduce production ident -> IDENT COLON3 IDENT 
-- On RPAREN reduce production ident -> IDENT COLON3 IDENT 
-- On REPEAT reduce production ident -> IDENT COLON3 IDENT 
-- On RBRACKET reduce production ident -> IDENT COLON3 IDENT 
-- On RBRACE reduce production ident -> IDENT COLON3 IDENT 
-- On RASSIGN reduce production ident -> IDENT COLON3 IDENT 
-- On PLUS reduce production ident -> IDENT COLON3 IDENT 
-- On OUTERPROD reduce production ident -> IDENT COLON3 IDENT 
-- On ORVEC reduce production ident -> IDENT COLON3 IDENT 
-- On OR reduce production ident -> IDENT COLON3 IDENT 
-- On NULL reduce production ident -> IDENT COLON3 IDENT 
-- On NEXT reduce production ident -> IDENT COLON3 IDENT 
-- On NEQ reduce production ident -> IDENT COLON3 IDENT 
-- On NA reduce production ident -> IDENT COLON3 IDENT 
-- On MULT reduce production ident -> IDENT COLON3 IDENT 
-- On MODULUS reduce production ident -> IDENT COLON3 IDENT 
-- On MINUS reduce production ident -> IDENT COLON3 IDENT 
-- On MATRIXMULT reduce production ident -> IDENT COLON3 IDENT 
-- On LT reduce production ident -> IDENT COLON3 IDENT 
-- On LSUPASSIGN reduce production ident -> IDENT COLON3 IDENT 
-- On LPAREN reduce production ident -> IDENT COLON3 IDENT 
-- On LISTSUBSET reduce production ident -> IDENT COLON3 IDENT 
-- On LE reduce production ident -> IDENT COLON3 IDENT 
-- On LBRACKET reduce production ident -> IDENT COLON3 IDENT 
-- On LBRACE reduce production ident -> IDENT COLON3 IDENT 
-- On LASSIGN reduce production ident -> IDENT COLON3 IDENT 
-- On KRONECKERPROD reduce production ident -> IDENT COLON3 IDENT 
-- On INTDIV reduce production ident -> IDENT COLON3 IDENT 
-- On INT reduce production ident -> IDENT COLON3 IDENT 
-- On IN reduce production ident -> IDENT COLON3 IDENT 
-- On IF reduce production ident -> IDENT COLON3 IDENT 
-- On IDENT reduce production ident -> IDENT COLON3 IDENT 
-- On HELP reduce production ident -> IDENT COLON3 IDENT 
-- On GT reduce production ident -> IDENT COLON3 IDENT 
-- On GE reduce production ident -> IDENT COLON3 IDENT 
-- On FUNCTION reduce production ident -> IDENT COLON3 IDENT 
-- On FOR reduce production ident -> IDENT COLON3 IDENT 
-- On FLOAT reduce production ident -> IDENT COLON3 IDENT 
-- On FALSE reduce production ident -> IDENT COLON3 IDENT 
-- On EXP reduce production ident -> IDENT COLON3 IDENT 
-- On EQEQ reduce production ident -> IDENT COLON3 IDENT 
-- On EQASSIGN reduce production ident -> IDENT COLON3 IDENT 
-- On EOF reduce production ident -> IDENT COLON3 IDENT 
-- On DIV reduce production ident -> IDENT COLON3 IDENT 
-- On COMPLEX reduce production ident -> IDENT COLON3 IDENT 
-- On COMMA reduce production ident -> IDENT COLON3 IDENT 
-- On COLON reduce production ident -> IDENT COLON3 IDENT 
-- On BREAK reduce production ident -> IDENT COLON3 IDENT 
-- On BANG reduce production ident -> IDENT COLON3 IDENT 
-- On ATTRIBUTE reduce production ident -> IDENT COLON3 IDENT 
-- On ANDVEC reduce production ident -> IDENT COLON3 IDENT 
-- On AND reduce production ident -> IDENT COLON3 IDENT 

State 17:
ident -> IDENT COLON2 . IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LBRACE LASSIGN KRONECKERPROD INTDIV INT IN IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EQASSIGN EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 18

State 18:
ident -> IDENT COLON2 IDENT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LBRACE LASSIGN KRONECKERPROD INTDIV INT IN IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EQASSIGN EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production ident -> IDENT COLON2 IDENT 
-- On USEROP reduce production ident -> IDENT COLON2 IDENT 
-- On TRUE reduce production ident -> IDENT COLON2 IDENT 
-- On TILDE reduce production ident -> IDENT COLON2 IDENT 
-- On SEMICOLON reduce production ident -> IDENT COLON2 IDENT 
-- On RSUPASSIGN reduce production ident -> IDENT COLON2 IDENT 
-- On RPAREN reduce production ident -> IDENT COLON2 IDENT 
-- On REPEAT reduce production ident -> IDENT COLON2 IDENT 
-- On RBRACKET reduce production ident -> IDENT COLON2 IDENT 
-- On RBRACE reduce production ident -> IDENT COLON2 IDENT 
-- On RASSIGN reduce production ident -> IDENT COLON2 IDENT 
-- On PLUS reduce production ident -> IDENT COLON2 IDENT 
-- On OUTERPROD reduce production ident -> IDENT COLON2 IDENT 
-- On ORVEC reduce production ident -> IDENT COLON2 IDENT 
-- On OR reduce production ident -> IDENT COLON2 IDENT 
-- On NULL reduce production ident -> IDENT COLON2 IDENT 
-- On NEXT reduce production ident -> IDENT COLON2 IDENT 
-- On NEQ reduce production ident -> IDENT COLON2 IDENT 
-- On NA reduce production ident -> IDENT COLON2 IDENT 
-- On MULT reduce production ident -> IDENT COLON2 IDENT 
-- On MODULUS reduce production ident -> IDENT COLON2 IDENT 
-- On MINUS reduce production ident -> IDENT COLON2 IDENT 
-- On MATRIXMULT reduce production ident -> IDENT COLON2 IDENT 
-- On LT reduce production ident -> IDENT COLON2 IDENT 
-- On LSUPASSIGN reduce production ident -> IDENT COLON2 IDENT 
-- On LPAREN reduce production ident -> IDENT COLON2 IDENT 
-- On LISTSUBSET reduce production ident -> IDENT COLON2 IDENT 
-- On LE reduce production ident -> IDENT COLON2 IDENT 
-- On LBRACKET reduce production ident -> IDENT COLON2 IDENT 
-- On LBRACE reduce production ident -> IDENT COLON2 IDENT 
-- On LASSIGN reduce production ident -> IDENT COLON2 IDENT 
-- On KRONECKERPROD reduce production ident -> IDENT COLON2 IDENT 
-- On INTDIV reduce production ident -> IDENT COLON2 IDENT 
-- On INT reduce production ident -> IDENT COLON2 IDENT 
-- On IN reduce production ident -> IDENT COLON2 IDENT 
-- On IF reduce production ident -> IDENT COLON2 IDENT 
-- On IDENT reduce production ident -> IDENT COLON2 IDENT 
-- On HELP reduce production ident -> IDENT COLON2 IDENT 
-- On GT reduce production ident -> IDENT COLON2 IDENT 
-- On GE reduce production ident -> IDENT COLON2 IDENT 
-- On FUNCTION reduce production ident -> IDENT COLON2 IDENT 
-- On FOR reduce production ident -> IDENT COLON2 IDENT 
-- On FLOAT reduce production ident -> IDENT COLON2 IDENT 
-- On FALSE reduce production ident -> IDENT COLON2 IDENT 
-- On EXP reduce production ident -> IDENT COLON2 IDENT 
-- On EQEQ reduce production ident -> IDENT COLON2 IDENT 
-- On EQASSIGN reduce production ident -> IDENT COLON2 IDENT 
-- On EOF reduce production ident -> IDENT COLON2 IDENT 
-- On DIV reduce production ident -> IDENT COLON2 IDENT 
-- On COMPLEX reduce production ident -> IDENT COLON2 IDENT 
-- On COMMA reduce production ident -> IDENT COLON2 IDENT 
-- On COLON reduce production ident -> IDENT COLON2 IDENT 
-- On BREAK reduce production ident -> IDENT COLON2 IDENT 
-- On BANG reduce production ident -> IDENT COLON2 IDENT 
-- On ATTRIBUTE reduce production ident -> IDENT COLON2 IDENT 
-- On ANDVEC reduce production ident -> IDENT COLON2 IDENT 
-- On AND reduce production ident -> IDENT COLON2 IDENT 

State 19:
expr -> HELP . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 135

State 20:
expr -> FUNCTION . LPAREN params RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 21

State 21:
expr -> FUNCTION LPAREN . params RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 22
-- On DOT3 shift to state 126
-- On params shift to state 127
-- On param shift to state 130
-- On RPAREN reduce production params -> 

State 22:
param -> IDENT . [ RPAREN COMMA ]
param -> IDENT . EQASSIGN expr [ RPAREN COMMA ]
-- On EQASSIGN shift to state 23
-- On RPAREN reduce production param -> IDENT 
-- On COMMA reduce production param -> IDENT 

State 23:
param -> IDENT EQASSIGN . expr [ RPAREN COMMA ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 125

State 24:
expr -> FOR . LPAREN ident IN expr RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 25

State 25:
expr -> FOR LPAREN . ident IN expr RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 14
-- On ident shift to state 26

State 26:
expr -> FOR LPAREN ident . IN expr RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IN shift to state 27

State 27:
expr -> FOR LPAREN ident IN . expr RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 122

State 28:
expr -> FLOAT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> FLOAT 
-- On USEROP reduce production expr -> FLOAT 
-- On TRUE reduce production expr -> FLOAT 
-- On TILDE reduce production expr -> FLOAT 
-- On SEMICOLON reduce production expr -> FLOAT 
-- On RSUPASSIGN reduce production expr -> FLOAT 
-- On RPAREN reduce production expr -> FLOAT 
-- On REPEAT reduce production expr -> FLOAT 
-- On RBRACKET reduce production expr -> FLOAT 
-- On RBRACE reduce production expr -> FLOAT 
-- On RASSIGN reduce production expr -> FLOAT 
-- On PLUS reduce production expr -> FLOAT 
-- On OUTERPROD reduce production expr -> FLOAT 
-- On ORVEC reduce production expr -> FLOAT 
-- On OR reduce production expr -> FLOAT 
-- On NULL reduce production expr -> FLOAT 
-- On NEXT reduce production expr -> FLOAT 
-- On NEQ reduce production expr -> FLOAT 
-- On NA reduce production expr -> FLOAT 
-- On MULT reduce production expr -> FLOAT 
-- On MODULUS reduce production expr -> FLOAT 
-- On MINUS reduce production expr -> FLOAT 
-- On MATRIXMULT reduce production expr -> FLOAT 
-- On LT reduce production expr -> FLOAT 
-- On LPAREN reduce production expr -> FLOAT 
-- On LISTSUBSET reduce production expr -> FLOAT 
-- On LE reduce production expr -> FLOAT 
-- On LBRACKET reduce production expr -> FLOAT 
-- On LBRACE reduce production expr -> FLOAT 
-- On KRONECKERPROD reduce production expr -> FLOAT 
-- On INTDIV reduce production expr -> FLOAT 
-- On INT reduce production expr -> FLOAT 
-- On IF reduce production expr -> FLOAT 
-- On IDENT reduce production expr -> FLOAT 
-- On HELP reduce production expr -> FLOAT 
-- On GT reduce production expr -> FLOAT 
-- On GE reduce production expr -> FLOAT 
-- On FUNCTION reduce production expr -> FLOAT 
-- On FOR reduce production expr -> FLOAT 
-- On FLOAT reduce production expr -> FLOAT 
-- On FALSE reduce production expr -> FLOAT 
-- On EXP reduce production expr -> FLOAT 
-- On EQEQ reduce production expr -> FLOAT 
-- On EOF reduce production expr -> FLOAT 
-- On DIV reduce production expr -> FLOAT 
-- On COMPLEX reduce production expr -> FLOAT 
-- On COMMA reduce production expr -> FLOAT 
-- On COLON reduce production expr -> FLOAT 
-- On BREAK reduce production expr -> FLOAT 
-- On BANG reduce production expr -> FLOAT 
-- On ATTRIBUTE reduce production expr -> FLOAT 
-- On ANDVEC reduce production expr -> FLOAT 
-- On AND reduce production expr -> FLOAT 

State 29:
expr -> FALSE . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> FALSE 
-- On USEROP reduce production expr -> FALSE 
-- On TRUE reduce production expr -> FALSE 
-- On TILDE reduce production expr -> FALSE 
-- On SEMICOLON reduce production expr -> FALSE 
-- On RSUPASSIGN reduce production expr -> FALSE 
-- On RPAREN reduce production expr -> FALSE 
-- On REPEAT reduce production expr -> FALSE 
-- On RBRACKET reduce production expr -> FALSE 
-- On RBRACE reduce production expr -> FALSE 
-- On RASSIGN reduce production expr -> FALSE 
-- On PLUS reduce production expr -> FALSE 
-- On OUTERPROD reduce production expr -> FALSE 
-- On ORVEC reduce production expr -> FALSE 
-- On OR reduce production expr -> FALSE 
-- On NULL reduce production expr -> FALSE 
-- On NEXT reduce production expr -> FALSE 
-- On NEQ reduce production expr -> FALSE 
-- On NA reduce production expr -> FALSE 
-- On MULT reduce production expr -> FALSE 
-- On MODULUS reduce production expr -> FALSE 
-- On MINUS reduce production expr -> FALSE 
-- On MATRIXMULT reduce production expr -> FALSE 
-- On LT reduce production expr -> FALSE 
-- On LPAREN reduce production expr -> FALSE 
-- On LISTSUBSET reduce production expr -> FALSE 
-- On LE reduce production expr -> FALSE 
-- On LBRACKET reduce production expr -> FALSE 
-- On LBRACE reduce production expr -> FALSE 
-- On KRONECKERPROD reduce production expr -> FALSE 
-- On INTDIV reduce production expr -> FALSE 
-- On INT reduce production expr -> FALSE 
-- On IF reduce production expr -> FALSE 
-- On IDENT reduce production expr -> FALSE 
-- On HELP reduce production expr -> FALSE 
-- On GT reduce production expr -> FALSE 
-- On GE reduce production expr -> FALSE 
-- On FUNCTION reduce production expr -> FALSE 
-- On FOR reduce production expr -> FALSE 
-- On FLOAT reduce production expr -> FALSE 
-- On FALSE reduce production expr -> FALSE 
-- On EXP reduce production expr -> FALSE 
-- On EQEQ reduce production expr -> FALSE 
-- On EOF reduce production expr -> FALSE 
-- On DIV reduce production expr -> FALSE 
-- On COMPLEX reduce production expr -> FALSE 
-- On COMMA reduce production expr -> FALSE 
-- On COLON reduce production expr -> FALSE 
-- On BREAK reduce production expr -> FALSE 
-- On BANG reduce production expr -> FALSE 
-- On ATTRIBUTE reduce production expr -> FALSE 
-- On ANDVEC reduce production expr -> FALSE 
-- On AND reduce production expr -> FALSE 

State 30:
expr -> COMPLEX . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> COMPLEX 
-- On USEROP reduce production expr -> COMPLEX 
-- On TRUE reduce production expr -> COMPLEX 
-- On TILDE reduce production expr -> COMPLEX 
-- On SEMICOLON reduce production expr -> COMPLEX 
-- On RSUPASSIGN reduce production expr -> COMPLEX 
-- On RPAREN reduce production expr -> COMPLEX 
-- On REPEAT reduce production expr -> COMPLEX 
-- On RBRACKET reduce production expr -> COMPLEX 
-- On RBRACE reduce production expr -> COMPLEX 
-- On RASSIGN reduce production expr -> COMPLEX 
-- On PLUS reduce production expr -> COMPLEX 
-- On OUTERPROD reduce production expr -> COMPLEX 
-- On ORVEC reduce production expr -> COMPLEX 
-- On OR reduce production expr -> COMPLEX 
-- On NULL reduce production expr -> COMPLEX 
-- On NEXT reduce production expr -> COMPLEX 
-- On NEQ reduce production expr -> COMPLEX 
-- On NA reduce production expr -> COMPLEX 
-- On MULT reduce production expr -> COMPLEX 
-- On MODULUS reduce production expr -> COMPLEX 
-- On MINUS reduce production expr -> COMPLEX 
-- On MATRIXMULT reduce production expr -> COMPLEX 
-- On LT reduce production expr -> COMPLEX 
-- On LPAREN reduce production expr -> COMPLEX 
-- On LISTSUBSET reduce production expr -> COMPLEX 
-- On LE reduce production expr -> COMPLEX 
-- On LBRACKET reduce production expr -> COMPLEX 
-- On LBRACE reduce production expr -> COMPLEX 
-- On KRONECKERPROD reduce production expr -> COMPLEX 
-- On INTDIV reduce production expr -> COMPLEX 
-- On INT reduce production expr -> COMPLEX 
-- On IF reduce production expr -> COMPLEX 
-- On IDENT reduce production expr -> COMPLEX 
-- On HELP reduce production expr -> COMPLEX 
-- On GT reduce production expr -> COMPLEX 
-- On GE reduce production expr -> COMPLEX 
-- On FUNCTION reduce production expr -> COMPLEX 
-- On FOR reduce production expr -> COMPLEX 
-- On FLOAT reduce production expr -> COMPLEX 
-- On FALSE reduce production expr -> COMPLEX 
-- On EXP reduce production expr -> COMPLEX 
-- On EQEQ reduce production expr -> COMPLEX 
-- On EOF reduce production expr -> COMPLEX 
-- On DIV reduce production expr -> COMPLEX 
-- On COMPLEX reduce production expr -> COMPLEX 
-- On COMMA reduce production expr -> COMPLEX 
-- On COLON reduce production expr -> COMPLEX 
-- On BREAK reduce production expr -> COMPLEX 
-- On BANG reduce production expr -> COMPLEX 
-- On ATTRIBUTE reduce production expr -> COMPLEX 
-- On ANDVEC reduce production expr -> COMPLEX 
-- On AND reduce production expr -> COMPLEX 

State 31:
expr -> BREAK . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> BREAK 
-- On USEROP reduce production expr -> BREAK 
-- On TRUE reduce production expr -> BREAK 
-- On TILDE reduce production expr -> BREAK 
-- On SEMICOLON reduce production expr -> BREAK 
-- On RSUPASSIGN reduce production expr -> BREAK 
-- On RPAREN reduce production expr -> BREAK 
-- On REPEAT reduce production expr -> BREAK 
-- On RBRACKET reduce production expr -> BREAK 
-- On RBRACE reduce production expr -> BREAK 
-- On RASSIGN reduce production expr -> BREAK 
-- On PLUS reduce production expr -> BREAK 
-- On OUTERPROD reduce production expr -> BREAK 
-- On ORVEC reduce production expr -> BREAK 
-- On OR reduce production expr -> BREAK 
-- On NULL reduce production expr -> BREAK 
-- On NEXT reduce production expr -> BREAK 
-- On NEQ reduce production expr -> BREAK 
-- On NA reduce production expr -> BREAK 
-- On MULT reduce production expr -> BREAK 
-- On MODULUS reduce production expr -> BREAK 
-- On MINUS reduce production expr -> BREAK 
-- On MATRIXMULT reduce production expr -> BREAK 
-- On LT reduce production expr -> BREAK 
-- On LPAREN reduce production expr -> BREAK 
-- On LISTSUBSET reduce production expr -> BREAK 
-- On LE reduce production expr -> BREAK 
-- On LBRACKET reduce production expr -> BREAK 
-- On LBRACE reduce production expr -> BREAK 
-- On KRONECKERPROD reduce production expr -> BREAK 
-- On INTDIV reduce production expr -> BREAK 
-- On INT reduce production expr -> BREAK 
-- On IF reduce production expr -> BREAK 
-- On IDENT reduce production expr -> BREAK 
-- On HELP reduce production expr -> BREAK 
-- On GT reduce production expr -> BREAK 
-- On GE reduce production expr -> BREAK 
-- On FUNCTION reduce production expr -> BREAK 
-- On FOR reduce production expr -> BREAK 
-- On FLOAT reduce production expr -> BREAK 
-- On FALSE reduce production expr -> BREAK 
-- On EXP reduce production expr -> BREAK 
-- On EQEQ reduce production expr -> BREAK 
-- On EOF reduce production expr -> BREAK 
-- On DIV reduce production expr -> BREAK 
-- On COMPLEX reduce production expr -> BREAK 
-- On COMMA reduce production expr -> BREAK 
-- On COLON reduce production expr -> BREAK 
-- On BREAK reduce production expr -> BREAK 
-- On BANG reduce production expr -> BREAK 
-- On ATTRIBUTE reduce production expr -> BREAK 
-- On ANDVEC reduce production expr -> BREAK 
-- On AND reduce production expr -> BREAK 

State 32:
expr -> BANG . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 121

State 33:
expr -> ident . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> ident . EQASSIGN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> ident . LASSIGN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> ident . LSUPASSIGN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LSUPASSIGN shift to state 34
-- On LASSIGN shift to state 117
-- On EQASSIGN shift to state 119
-- On WHILE reduce production expr -> ident 
-- On USEROP reduce production expr -> ident 
-- On TRUE reduce production expr -> ident 
-- On TILDE reduce production expr -> ident 
-- On SEMICOLON reduce production expr -> ident 
-- On RSUPASSIGN reduce production expr -> ident 
-- On RPAREN reduce production expr -> ident 
-- On REPEAT reduce production expr -> ident 
-- On RBRACKET reduce production expr -> ident 
-- On RBRACE reduce production expr -> ident 
-- On RASSIGN reduce production expr -> ident 
-- On PLUS reduce production expr -> ident 
-- On OUTERPROD reduce production expr -> ident 
-- On ORVEC reduce production expr -> ident 
-- On OR reduce production expr -> ident 
-- On NULL reduce production expr -> ident 
-- On NEXT reduce production expr -> ident 
-- On NEQ reduce production expr -> ident 
-- On NA reduce production expr -> ident 
-- On MULT reduce production expr -> ident 
-- On MODULUS reduce production expr -> ident 
-- On MINUS reduce production expr -> ident 
-- On MATRIXMULT reduce production expr -> ident 
-- On LT reduce production expr -> ident 
-- On LPAREN reduce production expr -> ident 
-- On LISTSUBSET reduce production expr -> ident 
-- On LE reduce production expr -> ident 
-- On LBRACKET reduce production expr -> ident 
-- On LBRACE reduce production expr -> ident 
-- On KRONECKERPROD reduce production expr -> ident 
-- On INTDIV reduce production expr -> ident 
-- On INT reduce production expr -> ident 
-- On IF reduce production expr -> ident 
-- On IDENT reduce production expr -> ident 
-- On HELP reduce production expr -> ident 
-- On GT reduce production expr -> ident 
-- On GE reduce production expr -> ident 
-- On FUNCTION reduce production expr -> ident 
-- On FOR reduce production expr -> ident 
-- On FLOAT reduce production expr -> ident 
-- On FALSE reduce production expr -> ident 
-- On EXP reduce production expr -> ident 
-- On EQEQ reduce production expr -> ident 
-- On EOF reduce production expr -> ident 
-- On DIV reduce production expr -> ident 
-- On COMPLEX reduce production expr -> ident 
-- On COMMA reduce production expr -> ident 
-- On COLON reduce production expr -> ident 
-- On BREAK reduce production expr -> ident 
-- On BANG reduce production expr -> ident 
-- On ATTRIBUTE reduce production expr -> ident 
-- On ANDVEC reduce production expr -> ident 
-- On AND reduce production expr -> ident 

State 34:
expr -> ident LSUPASSIGN . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 35

State 35:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> ident LSUPASSIGN expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> ident LSUPASSIGN expr 
-- On TRUE reduce production expr -> ident LSUPASSIGN expr 
-- On SEMICOLON reduce production expr -> ident LSUPASSIGN expr 
-- On RPAREN reduce production expr -> ident LSUPASSIGN expr 
-- On REPEAT reduce production expr -> ident LSUPASSIGN expr 
-- On RBRACKET reduce production expr -> ident LSUPASSIGN expr 
-- On RBRACE reduce production expr -> ident LSUPASSIGN expr 
-- On NULL reduce production expr -> ident LSUPASSIGN expr 
-- On NEXT reduce production expr -> ident LSUPASSIGN expr 
-- On NA reduce production expr -> ident LSUPASSIGN expr 
-- On LBRACE reduce production expr -> ident LSUPASSIGN expr 
-- On INT reduce production expr -> ident LSUPASSIGN expr 
-- On IF reduce production expr -> ident LSUPASSIGN expr 
-- On IDENT reduce production expr -> ident LSUPASSIGN expr 
-- On HELP reduce production expr -> ident LSUPASSIGN expr 
-- On FUNCTION reduce production expr -> ident LSUPASSIGN expr 
-- On FOR reduce production expr -> ident LSUPASSIGN expr 
-- On FLOAT reduce production expr -> ident LSUPASSIGN expr 
-- On FALSE reduce production expr -> ident LSUPASSIGN expr 
-- On EOF reduce production expr -> ident LSUPASSIGN expr 
-- On COMPLEX reduce production expr -> ident LSUPASSIGN expr 
-- On COMMA reduce production expr -> ident LSUPASSIGN expr 
-- On BREAK reduce production expr -> ident LSUPASSIGN expr 
-- On BANG reduce production expr -> ident LSUPASSIGN expr 

State 36:
expr -> expr USEROP . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 37

State 37:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr USEROP expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr USEROP expr 
-- On USEROP reduce production expr -> expr USEROP expr 
-- On TRUE reduce production expr -> expr USEROP expr 
-- On TILDE reduce production expr -> expr USEROP expr 
-- On SEMICOLON reduce production expr -> expr USEROP expr 
-- On RSUPASSIGN reduce production expr -> expr USEROP expr 
-- On RPAREN reduce production expr -> expr USEROP expr 
-- On REPEAT reduce production expr -> expr USEROP expr 
-- On RBRACKET reduce production expr -> expr USEROP expr 
-- On RBRACE reduce production expr -> expr USEROP expr 
-- On RASSIGN reduce production expr -> expr USEROP expr 
-- On PLUS reduce production expr -> expr USEROP expr 
-- On OUTERPROD reduce production expr -> expr USEROP expr 
-- On ORVEC reduce production expr -> expr USEROP expr 
-- On OR reduce production expr -> expr USEROP expr 
-- On NULL reduce production expr -> expr USEROP expr 
-- On NEXT reduce production expr -> expr USEROP expr 
-- On NEQ reduce production expr -> expr USEROP expr 
-- On NA reduce production expr -> expr USEROP expr 
-- On MULT reduce production expr -> expr USEROP expr 
-- On MODULUS reduce production expr -> expr USEROP expr 
-- On MINUS reduce production expr -> expr USEROP expr 
-- On MATRIXMULT reduce production expr -> expr USEROP expr 
-- On LT reduce production expr -> expr USEROP expr 
-- On LE reduce production expr -> expr USEROP expr 
-- On LBRACE reduce production expr -> expr USEROP expr 
-- On KRONECKERPROD reduce production expr -> expr USEROP expr 
-- On INTDIV reduce production expr -> expr USEROP expr 
-- On INT reduce production expr -> expr USEROP expr 
-- On IF reduce production expr -> expr USEROP expr 
-- On IDENT reduce production expr -> expr USEROP expr 
-- On HELP reduce production expr -> expr USEROP expr 
-- On GT reduce production expr -> expr USEROP expr 
-- On GE reduce production expr -> expr USEROP expr 
-- On FUNCTION reduce production expr -> expr USEROP expr 
-- On FOR reduce production expr -> expr USEROP expr 
-- On FLOAT reduce production expr -> expr USEROP expr 
-- On FALSE reduce production expr -> expr USEROP expr 
-- On EQEQ reduce production expr -> expr USEROP expr 
-- On EOF reduce production expr -> expr USEROP expr 
-- On DIV reduce production expr -> expr USEROP expr 
-- On COMPLEX reduce production expr -> expr USEROP expr 
-- On COMMA reduce production expr -> expr USEROP expr 
-- On BREAK reduce production expr -> expr USEROP expr 
-- On BANG reduce production expr -> expr USEROP expr 
-- On ANDVEC reduce production expr -> expr USEROP expr 
-- On AND reduce production expr -> expr USEROP expr 

State 38:
expr -> expr LPAREN . args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On STRING shift to state 39
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 51
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 101
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 104
-- On args shift to state 115
-- On arg shift to state 108
-- On RPAREN reduce production args -> 

State 39:
arg -> STRING . EQASSIGN [ RPAREN RBRACKET COMMA ]
arg -> STRING . EQASSIGN expr [ RPAREN RBRACKET COMMA ]
-- On EQASSIGN shift to state 40

State 40:
arg -> STRING EQASSIGN . [ RPAREN RBRACKET COMMA ]
arg -> STRING EQASSIGN . expr [ RPAREN RBRACKET COMMA ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 41
-- On RPAREN reduce production arg -> STRING EQASSIGN 
-- On RBRACKET reduce production arg -> STRING EQASSIGN 
-- On COMMA reduce production arg -> STRING EQASSIGN 

State 41:
arg -> STRING EQASSIGN expr . [ RPAREN RBRACKET COMMA ]
expr -> expr . PLUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On RPAREN reduce production arg -> STRING EQASSIGN expr 
-- On RBRACKET reduce production arg -> STRING EQASSIGN expr 
-- On COMMA reduce production arg -> STRING EQASSIGN expr 

State 42:
expr -> expr TILDE . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 43

State 43:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr TILDE expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr TILDE expr 
-- On TRUE reduce production expr -> expr TILDE expr 
-- On TILDE reduce production expr -> expr TILDE expr 
-- On SEMICOLON reduce production expr -> expr TILDE expr 
-- On RSUPASSIGN reduce production expr -> expr TILDE expr 
-- On RPAREN reduce production expr -> expr TILDE expr 
-- On REPEAT reduce production expr -> expr TILDE expr 
-- On RBRACKET reduce production expr -> expr TILDE expr 
-- On RBRACE reduce production expr -> expr TILDE expr 
-- On RASSIGN reduce production expr -> expr TILDE expr 
-- On NULL reduce production expr -> expr TILDE expr 
-- On NEXT reduce production expr -> expr TILDE expr 
-- On NA reduce production expr -> expr TILDE expr 
-- On LBRACE reduce production expr -> expr TILDE expr 
-- On INT reduce production expr -> expr TILDE expr 
-- On IF reduce production expr -> expr TILDE expr 
-- On IDENT reduce production expr -> expr TILDE expr 
-- On HELP reduce production expr -> expr TILDE expr 
-- On FUNCTION reduce production expr -> expr TILDE expr 
-- On FOR reduce production expr -> expr TILDE expr 
-- On FLOAT reduce production expr -> expr TILDE expr 
-- On FALSE reduce production expr -> expr TILDE expr 
-- On EOF reduce production expr -> expr TILDE expr 
-- On COMPLEX reduce production expr -> expr TILDE expr 
-- On COMMA reduce production expr -> expr TILDE expr 
-- On BREAK reduce production expr -> expr TILDE expr 
-- On BANG reduce production expr -> expr TILDE expr 

State 44:
expr -> expr PLUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 45

State 45:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr PLUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr PLUS expr 
-- On TRUE reduce production expr -> expr PLUS expr 
-- On TILDE reduce production expr -> expr PLUS expr 
-- On SEMICOLON reduce production expr -> expr PLUS expr 
-- On RSUPASSIGN reduce production expr -> expr PLUS expr 
-- On RPAREN reduce production expr -> expr PLUS expr 
-- On REPEAT reduce production expr -> expr PLUS expr 
-- On RBRACKET reduce production expr -> expr PLUS expr 
-- On RBRACE reduce production expr -> expr PLUS expr 
-- On RASSIGN reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On ORVEC reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On NULL reduce production expr -> expr PLUS expr 
-- On NEXT reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On NA reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LE reduce production expr -> expr PLUS expr 
-- On LBRACE reduce production expr -> expr PLUS expr 
-- On INT reduce production expr -> expr PLUS expr 
-- On IF reduce production expr -> expr PLUS expr 
-- On IDENT reduce production expr -> expr PLUS expr 
-- On HELP reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GE reduce production expr -> expr PLUS expr 
-- On FUNCTION reduce production expr -> expr PLUS expr 
-- On FOR reduce production expr -> expr PLUS expr 
-- On FLOAT reduce production expr -> expr PLUS expr 
-- On FALSE reduce production expr -> expr PLUS expr 
-- On EQEQ reduce production expr -> expr PLUS expr 
-- On EOF reduce production expr -> expr PLUS expr 
-- On COMPLEX reduce production expr -> expr PLUS expr 
-- On COMMA reduce production expr -> expr PLUS expr 
-- On BREAK reduce production expr -> expr PLUS expr 
-- On BANG reduce production expr -> expr PLUS expr 
-- On ANDVEC reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 46:
expr -> expr OUTERPROD . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 47

State 47:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr OUTERPROD expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr OUTERPROD expr 
-- On USEROP reduce production expr -> expr OUTERPROD expr 
-- On TRUE reduce production expr -> expr OUTERPROD expr 
-- On TILDE reduce production expr -> expr OUTERPROD expr 
-- On SEMICOLON reduce production expr -> expr OUTERPROD expr 
-- On RSUPASSIGN reduce production expr -> expr OUTERPROD expr 
-- On RPAREN reduce production expr -> expr OUTERPROD expr 
-- On REPEAT reduce production expr -> expr OUTERPROD expr 
-- On RBRACKET reduce production expr -> expr OUTERPROD expr 
-- On RBRACE reduce production expr -> expr OUTERPROD expr 
-- On RASSIGN reduce production expr -> expr OUTERPROD expr 
-- On PLUS reduce production expr -> expr OUTERPROD expr 
-- On OUTERPROD reduce production expr -> expr OUTERPROD expr 
-- On ORVEC reduce production expr -> expr OUTERPROD expr 
-- On OR reduce production expr -> expr OUTERPROD expr 
-- On NULL reduce production expr -> expr OUTERPROD expr 
-- On NEXT reduce production expr -> expr OUTERPROD expr 
-- On NEQ reduce production expr -> expr OUTERPROD expr 
-- On NA reduce production expr -> expr OUTERPROD expr 
-- On MULT reduce production expr -> expr OUTERPROD expr 
-- On MODULUS reduce production expr -> expr OUTERPROD expr 
-- On MINUS reduce production expr -> expr OUTERPROD expr 
-- On MATRIXMULT reduce production expr -> expr OUTERPROD expr 
-- On LT reduce production expr -> expr OUTERPROD expr 
-- On LE reduce production expr -> expr OUTERPROD expr 
-- On LBRACE reduce production expr -> expr OUTERPROD expr 
-- On KRONECKERPROD reduce production expr -> expr OUTERPROD expr 
-- On INTDIV reduce production expr -> expr OUTERPROD expr 
-- On INT reduce production expr -> expr OUTERPROD expr 
-- On IF reduce production expr -> expr OUTERPROD expr 
-- On IDENT reduce production expr -> expr OUTERPROD expr 
-- On HELP reduce production expr -> expr OUTERPROD expr 
-- On GT reduce production expr -> expr OUTERPROD expr 
-- On GE reduce production expr -> expr OUTERPROD expr 
-- On FUNCTION reduce production expr -> expr OUTERPROD expr 
-- On FOR reduce production expr -> expr OUTERPROD expr 
-- On FLOAT reduce production expr -> expr OUTERPROD expr 
-- On FALSE reduce production expr -> expr OUTERPROD expr 
-- On EQEQ reduce production expr -> expr OUTERPROD expr 
-- On EOF reduce production expr -> expr OUTERPROD expr 
-- On DIV reduce production expr -> expr OUTERPROD expr 
-- On COMPLEX reduce production expr -> expr OUTERPROD expr 
-- On COMMA reduce production expr -> expr OUTERPROD expr 
-- On BREAK reduce production expr -> expr OUTERPROD expr 
-- On BANG reduce production expr -> expr OUTERPROD expr 
-- On ANDVEC reduce production expr -> expr OUTERPROD expr 
-- On AND reduce production expr -> expr OUTERPROD expr 

State 48:
expr -> expr LISTSUBSET . IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 49

State 49:
expr -> expr LISTSUBSET IDENT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> expr LISTSUBSET IDENT 
-- On USEROP reduce production expr -> expr LISTSUBSET IDENT 
-- On TRUE reduce production expr -> expr LISTSUBSET IDENT 
-- On TILDE reduce production expr -> expr LISTSUBSET IDENT 
-- On SEMICOLON reduce production expr -> expr LISTSUBSET IDENT 
-- On RSUPASSIGN reduce production expr -> expr LISTSUBSET IDENT 
-- On RPAREN reduce production expr -> expr LISTSUBSET IDENT 
-- On REPEAT reduce production expr -> expr LISTSUBSET IDENT 
-- On RBRACKET reduce production expr -> expr LISTSUBSET IDENT 
-- On RBRACE reduce production expr -> expr LISTSUBSET IDENT 
-- On RASSIGN reduce production expr -> expr LISTSUBSET IDENT 
-- On PLUS reduce production expr -> expr LISTSUBSET IDENT 
-- On OUTERPROD reduce production expr -> expr LISTSUBSET IDENT 
-- On ORVEC reduce production expr -> expr LISTSUBSET IDENT 
-- On OR reduce production expr -> expr LISTSUBSET IDENT 
-- On NULL reduce production expr -> expr LISTSUBSET IDENT 
-- On NEXT reduce production expr -> expr LISTSUBSET IDENT 
-- On NEQ reduce production expr -> expr LISTSUBSET IDENT 
-- On NA reduce production expr -> expr LISTSUBSET IDENT 
-- On MULT reduce production expr -> expr LISTSUBSET IDENT 
-- On MODULUS reduce production expr -> expr LISTSUBSET IDENT 
-- On MINUS reduce production expr -> expr LISTSUBSET IDENT 
-- On MATRIXMULT reduce production expr -> expr LISTSUBSET IDENT 
-- On LT reduce production expr -> expr LISTSUBSET IDENT 
-- On LPAREN reduce production expr -> expr LISTSUBSET IDENT 
-- On LISTSUBSET reduce production expr -> expr LISTSUBSET IDENT 
-- On LE reduce production expr -> expr LISTSUBSET IDENT 
-- On LBRACKET reduce production expr -> expr LISTSUBSET IDENT 
-- On LBRACE reduce production expr -> expr LISTSUBSET IDENT 
-- On KRONECKERPROD reduce production expr -> expr LISTSUBSET IDENT 
-- On INTDIV reduce production expr -> expr LISTSUBSET IDENT 
-- On INT reduce production expr -> expr LISTSUBSET IDENT 
-- On IF reduce production expr -> expr LISTSUBSET IDENT 
-- On IDENT reduce production expr -> expr LISTSUBSET IDENT 
-- On HELP reduce production expr -> expr LISTSUBSET IDENT 
-- On GT reduce production expr -> expr LISTSUBSET IDENT 
-- On GE reduce production expr -> expr LISTSUBSET IDENT 
-- On FUNCTION reduce production expr -> expr LISTSUBSET IDENT 
-- On FOR reduce production expr -> expr LISTSUBSET IDENT 
-- On FLOAT reduce production expr -> expr LISTSUBSET IDENT 
-- On FALSE reduce production expr -> expr LISTSUBSET IDENT 
-- On EXP reduce production expr -> expr LISTSUBSET IDENT 
-- On EQEQ reduce production expr -> expr LISTSUBSET IDENT 
-- On EOF reduce production expr -> expr LISTSUBSET IDENT 
-- On DIV reduce production expr -> expr LISTSUBSET IDENT 
-- On COMPLEX reduce production expr -> expr LISTSUBSET IDENT 
-- On COMMA reduce production expr -> expr LISTSUBSET IDENT 
-- On COLON reduce production expr -> expr LISTSUBSET IDENT 
-- On BREAK reduce production expr -> expr LISTSUBSET IDENT 
-- On BANG reduce production expr -> expr LISTSUBSET IDENT 
-- On ATTRIBUTE reduce production expr -> expr LISTSUBSET IDENT 
-- On ANDVEC reduce production expr -> expr LISTSUBSET IDENT 
-- On AND reduce production expr -> expr LISTSUBSET IDENT 

State 50:
expr -> expr LBRACKET . args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr LBRACKET . LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On STRING shift to state 39
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 51
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACKET shift to state 100
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 101
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 104
-- On args shift to state 113
-- On arg shift to state 108
-- On RBRACKET reduce production args -> 

State 51:
arg -> NULL . EQASSIGN [ RPAREN RBRACKET COMMA ]
arg -> NULL . EQASSIGN expr [ RPAREN RBRACKET COMMA ]
expr -> NULL . [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
-- On EQASSIGN shift to state 52
-- On USEROP reduce production expr -> NULL 
-- On TILDE reduce production expr -> NULL 
-- On RSUPASSIGN reduce production expr -> NULL 
-- On RPAREN reduce production expr -> NULL 
-- On RBRACKET reduce production expr -> NULL 
-- On RASSIGN reduce production expr -> NULL 
-- On PLUS reduce production expr -> NULL 
-- On OUTERPROD reduce production expr -> NULL 
-- On ORVEC reduce production expr -> NULL 
-- On OR reduce production expr -> NULL 
-- On NEQ reduce production expr -> NULL 
-- On MULT reduce production expr -> NULL 
-- On MODULUS reduce production expr -> NULL 
-- On MINUS reduce production expr -> NULL 
-- On MATRIXMULT reduce production expr -> NULL 
-- On LT reduce production expr -> NULL 
-- On LPAREN reduce production expr -> NULL 
-- On LISTSUBSET reduce production expr -> NULL 
-- On LE reduce production expr -> NULL 
-- On LBRACKET reduce production expr -> NULL 
-- On KRONECKERPROD reduce production expr -> NULL 
-- On INTDIV reduce production expr -> NULL 
-- On HELP reduce production expr -> NULL 
-- On GT reduce production expr -> NULL 
-- On GE reduce production expr -> NULL 
-- On EXP reduce production expr -> NULL 
-- On EQEQ reduce production expr -> NULL 
-- On DIV reduce production expr -> NULL 
-- On COMMA reduce production expr -> NULL 
-- On COLON reduce production expr -> NULL 
-- On ATTRIBUTE reduce production expr -> NULL 
-- On ANDVEC reduce production expr -> NULL 
-- On AND reduce production expr -> NULL 

State 52:
arg -> NULL EQASSIGN . [ RPAREN RBRACKET COMMA ]
arg -> NULL EQASSIGN . expr [ RPAREN RBRACKET COMMA ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 53
-- On RPAREN reduce production arg -> NULL EQASSIGN 
-- On RBRACKET reduce production arg -> NULL EQASSIGN 
-- On COMMA reduce production arg -> NULL EQASSIGN 

State 53:
arg -> NULL EQASSIGN expr . [ RPAREN RBRACKET COMMA ]
expr -> expr . PLUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On RPAREN reduce production arg -> NULL EQASSIGN expr 
-- On RBRACKET reduce production arg -> NULL EQASSIGN expr 
-- On COMMA reduce production arg -> NULL EQASSIGN expr 

State 54:
expr -> expr RSUPASSIGN . ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 14
-- On ident shift to state 55

State 55:
expr -> expr RSUPASSIGN ident . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> expr RSUPASSIGN ident 
-- On USEROP reduce production expr -> expr RSUPASSIGN ident 
-- On TRUE reduce production expr -> expr RSUPASSIGN ident 
-- On TILDE reduce production expr -> expr RSUPASSIGN ident 
-- On SEMICOLON reduce production expr -> expr RSUPASSIGN ident 
-- On RSUPASSIGN reduce production expr -> expr RSUPASSIGN ident 
-- On RPAREN reduce production expr -> expr RSUPASSIGN ident 
-- On REPEAT reduce production expr -> expr RSUPASSIGN ident 
-- On RBRACKET reduce production expr -> expr RSUPASSIGN ident 
-- On RBRACE reduce production expr -> expr RSUPASSIGN ident 
-- On RASSIGN reduce production expr -> expr RSUPASSIGN ident 
-- On PLUS reduce production expr -> expr RSUPASSIGN ident 
-- On OUTERPROD reduce production expr -> expr RSUPASSIGN ident 
-- On ORVEC reduce production expr -> expr RSUPASSIGN ident 
-- On OR reduce production expr -> expr RSUPASSIGN ident 
-- On NULL reduce production expr -> expr RSUPASSIGN ident 
-- On NEXT reduce production expr -> expr RSUPASSIGN ident 
-- On NEQ reduce production expr -> expr RSUPASSIGN ident 
-- On NA reduce production expr -> expr RSUPASSIGN ident 
-- On MULT reduce production expr -> expr RSUPASSIGN ident 
-- On MODULUS reduce production expr -> expr RSUPASSIGN ident 
-- On MINUS reduce production expr -> expr RSUPASSIGN ident 
-- On MATRIXMULT reduce production expr -> expr RSUPASSIGN ident 
-- On LT reduce production expr -> expr RSUPASSIGN ident 
-- On LPAREN reduce production expr -> expr RSUPASSIGN ident 
-- On LISTSUBSET reduce production expr -> expr RSUPASSIGN ident 
-- On LE reduce production expr -> expr RSUPASSIGN ident 
-- On LBRACKET reduce production expr -> expr RSUPASSIGN ident 
-- On LBRACE reduce production expr -> expr RSUPASSIGN ident 
-- On KRONECKERPROD reduce production expr -> expr RSUPASSIGN ident 
-- On INTDIV reduce production expr -> expr RSUPASSIGN ident 
-- On INT reduce production expr -> expr RSUPASSIGN ident 
-- On IF reduce production expr -> expr RSUPASSIGN ident 
-- On IDENT reduce production expr -> expr RSUPASSIGN ident 
-- On HELP reduce production expr -> expr RSUPASSIGN ident 
-- On GT reduce production expr -> expr RSUPASSIGN ident 
-- On GE reduce production expr -> expr RSUPASSIGN ident 
-- On FUNCTION reduce production expr -> expr RSUPASSIGN ident 
-- On FOR reduce production expr -> expr RSUPASSIGN ident 
-- On FLOAT reduce production expr -> expr RSUPASSIGN ident 
-- On FALSE reduce production expr -> expr RSUPASSIGN ident 
-- On EXP reduce production expr -> expr RSUPASSIGN ident 
-- On EQEQ reduce production expr -> expr RSUPASSIGN ident 
-- On EOF reduce production expr -> expr RSUPASSIGN ident 
-- On DIV reduce production expr -> expr RSUPASSIGN ident 
-- On COMPLEX reduce production expr -> expr RSUPASSIGN ident 
-- On COMMA reduce production expr -> expr RSUPASSIGN ident 
-- On COLON reduce production expr -> expr RSUPASSIGN ident 
-- On BREAK reduce production expr -> expr RSUPASSIGN ident 
-- On BANG reduce production expr -> expr RSUPASSIGN ident 
-- On ATTRIBUTE reduce production expr -> expr RSUPASSIGN ident 
-- On ANDVEC reduce production expr -> expr RSUPASSIGN ident 
-- On AND reduce production expr -> expr RSUPASSIGN ident 

State 56:
expr -> expr RASSIGN . ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 14
-- On ident shift to state 57

State 57:
expr -> expr RASSIGN ident . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> expr RASSIGN ident 
-- On USEROP reduce production expr -> expr RASSIGN ident 
-- On TRUE reduce production expr -> expr RASSIGN ident 
-- On TILDE reduce production expr -> expr RASSIGN ident 
-- On SEMICOLON reduce production expr -> expr RASSIGN ident 
-- On RSUPASSIGN reduce production expr -> expr RASSIGN ident 
-- On RPAREN reduce production expr -> expr RASSIGN ident 
-- On REPEAT reduce production expr -> expr RASSIGN ident 
-- On RBRACKET reduce production expr -> expr RASSIGN ident 
-- On RBRACE reduce production expr -> expr RASSIGN ident 
-- On RASSIGN reduce production expr -> expr RASSIGN ident 
-- On PLUS reduce production expr -> expr RASSIGN ident 
-- On OUTERPROD reduce production expr -> expr RASSIGN ident 
-- On ORVEC reduce production expr -> expr RASSIGN ident 
-- On OR reduce production expr -> expr RASSIGN ident 
-- On NULL reduce production expr -> expr RASSIGN ident 
-- On NEXT reduce production expr -> expr RASSIGN ident 
-- On NEQ reduce production expr -> expr RASSIGN ident 
-- On NA reduce production expr -> expr RASSIGN ident 
-- On MULT reduce production expr -> expr RASSIGN ident 
-- On MODULUS reduce production expr -> expr RASSIGN ident 
-- On MINUS reduce production expr -> expr RASSIGN ident 
-- On MATRIXMULT reduce production expr -> expr RASSIGN ident 
-- On LT reduce production expr -> expr RASSIGN ident 
-- On LPAREN reduce production expr -> expr RASSIGN ident 
-- On LISTSUBSET reduce production expr -> expr RASSIGN ident 
-- On LE reduce production expr -> expr RASSIGN ident 
-- On LBRACKET reduce production expr -> expr RASSIGN ident 
-- On LBRACE reduce production expr -> expr RASSIGN ident 
-- On KRONECKERPROD reduce production expr -> expr RASSIGN ident 
-- On INTDIV reduce production expr -> expr RASSIGN ident 
-- On INT reduce production expr -> expr RASSIGN ident 
-- On IF reduce production expr -> expr RASSIGN ident 
-- On IDENT reduce production expr -> expr RASSIGN ident 
-- On HELP reduce production expr -> expr RASSIGN ident 
-- On GT reduce production expr -> expr RASSIGN ident 
-- On GE reduce production expr -> expr RASSIGN ident 
-- On FUNCTION reduce production expr -> expr RASSIGN ident 
-- On FOR reduce production expr -> expr RASSIGN ident 
-- On FLOAT reduce production expr -> expr RASSIGN ident 
-- On FALSE reduce production expr -> expr RASSIGN ident 
-- On EXP reduce production expr -> expr RASSIGN ident 
-- On EQEQ reduce production expr -> expr RASSIGN ident 
-- On EOF reduce production expr -> expr RASSIGN ident 
-- On DIV reduce production expr -> expr RASSIGN ident 
-- On COMPLEX reduce production expr -> expr RASSIGN ident 
-- On COMMA reduce production expr -> expr RASSIGN ident 
-- On COLON reduce production expr -> expr RASSIGN ident 
-- On BREAK reduce production expr -> expr RASSIGN ident 
-- On BANG reduce production expr -> expr RASSIGN ident 
-- On ATTRIBUTE reduce production expr -> expr RASSIGN ident 
-- On ANDVEC reduce production expr -> expr RASSIGN ident 
-- On AND reduce production expr -> expr RASSIGN ident 

State 58:
expr -> expr ORVEC . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 59

State 59:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr ORVEC expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr ORVEC expr 
-- On TRUE reduce production expr -> expr ORVEC expr 
-- On TILDE reduce production expr -> expr ORVEC expr 
-- On SEMICOLON reduce production expr -> expr ORVEC expr 
-- On RSUPASSIGN reduce production expr -> expr ORVEC expr 
-- On RPAREN reduce production expr -> expr ORVEC expr 
-- On REPEAT reduce production expr -> expr ORVEC expr 
-- On RBRACKET reduce production expr -> expr ORVEC expr 
-- On RBRACE reduce production expr -> expr ORVEC expr 
-- On RASSIGN reduce production expr -> expr ORVEC expr 
-- On ORVEC reduce production expr -> expr ORVEC expr 
-- On OR reduce production expr -> expr ORVEC expr 
-- On NULL reduce production expr -> expr ORVEC expr 
-- On NEXT reduce production expr -> expr ORVEC expr 
-- On NA reduce production expr -> expr ORVEC expr 
-- On LBRACE reduce production expr -> expr ORVEC expr 
-- On INT reduce production expr -> expr ORVEC expr 
-- On IF reduce production expr -> expr ORVEC expr 
-- On IDENT reduce production expr -> expr ORVEC expr 
-- On HELP reduce production expr -> expr ORVEC expr 
-- On FUNCTION reduce production expr -> expr ORVEC expr 
-- On FOR reduce production expr -> expr ORVEC expr 
-- On FLOAT reduce production expr -> expr ORVEC expr 
-- On FALSE reduce production expr -> expr ORVEC expr 
-- On EOF reduce production expr -> expr ORVEC expr 
-- On COMPLEX reduce production expr -> expr ORVEC expr 
-- On COMMA reduce production expr -> expr ORVEC expr 
-- On BREAK reduce production expr -> expr ORVEC expr 
-- On BANG reduce production expr -> expr ORVEC expr 

State 60:
expr -> expr NEQ . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 61

State 61:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr NEQ expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr NEQ expr 
-- On TRUE reduce production expr -> expr NEQ expr 
-- On TILDE reduce production expr -> expr NEQ expr 
-- On SEMICOLON reduce production expr -> expr NEQ expr 
-- On RSUPASSIGN reduce production expr -> expr NEQ expr 
-- On RPAREN reduce production expr -> expr NEQ expr 
-- On REPEAT reduce production expr -> expr NEQ expr 
-- On RBRACKET reduce production expr -> expr NEQ expr 
-- On RBRACE reduce production expr -> expr NEQ expr 
-- On RASSIGN reduce production expr -> expr NEQ expr 
-- On ORVEC reduce production expr -> expr NEQ expr 
-- On OR reduce production expr -> expr NEQ expr 
-- On NULL reduce production expr -> expr NEQ expr 
-- On NEXT reduce production expr -> expr NEQ expr 
-- On NEQ reduce production expr -> expr NEQ expr 
-- On NA reduce production expr -> expr NEQ expr 
-- On LT reduce production expr -> expr NEQ expr 
-- On LE reduce production expr -> expr NEQ expr 
-- On LBRACE reduce production expr -> expr NEQ expr 
-- On INT reduce production expr -> expr NEQ expr 
-- On IF reduce production expr -> expr NEQ expr 
-- On IDENT reduce production expr -> expr NEQ expr 
-- On HELP reduce production expr -> expr NEQ expr 
-- On GT reduce production expr -> expr NEQ expr 
-- On GE reduce production expr -> expr NEQ expr 
-- On FUNCTION reduce production expr -> expr NEQ expr 
-- On FOR reduce production expr -> expr NEQ expr 
-- On FLOAT reduce production expr -> expr NEQ expr 
-- On FALSE reduce production expr -> expr NEQ expr 
-- On EQEQ reduce production expr -> expr NEQ expr 
-- On EOF reduce production expr -> expr NEQ expr 
-- On COMPLEX reduce production expr -> expr NEQ expr 
-- On COMMA reduce production expr -> expr NEQ expr 
-- On BREAK reduce production expr -> expr NEQ expr 
-- On BANG reduce production expr -> expr NEQ expr 
-- On ANDVEC reduce production expr -> expr NEQ expr 
-- On AND reduce production expr -> expr NEQ expr 

State 62:
expr -> expr MULT . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 63

State 63:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr MULT expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On OUTERPROD shift to state 46
-- On MODULUS shift to state 64
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr MULT expr 
-- On TRUE reduce production expr -> expr MULT expr 
-- On TILDE reduce production expr -> expr MULT expr 
-- On SEMICOLON reduce production expr -> expr MULT expr 
-- On RSUPASSIGN reduce production expr -> expr MULT expr 
-- On RPAREN reduce production expr -> expr MULT expr 
-- On REPEAT reduce production expr -> expr MULT expr 
-- On RBRACKET reduce production expr -> expr MULT expr 
-- On RBRACE reduce production expr -> expr MULT expr 
-- On RASSIGN reduce production expr -> expr MULT expr 
-- On PLUS reduce production expr -> expr MULT expr 
-- On ORVEC reduce production expr -> expr MULT expr 
-- On OR reduce production expr -> expr MULT expr 
-- On NULL reduce production expr -> expr MULT expr 
-- On NEXT reduce production expr -> expr MULT expr 
-- On NEQ reduce production expr -> expr MULT expr 
-- On NA reduce production expr -> expr MULT expr 
-- On MULT reduce production expr -> expr MULT expr 
-- On MINUS reduce production expr -> expr MULT expr 
-- On LT reduce production expr -> expr MULT expr 
-- On LE reduce production expr -> expr MULT expr 
-- On LBRACE reduce production expr -> expr MULT expr 
-- On INT reduce production expr -> expr MULT expr 
-- On IF reduce production expr -> expr MULT expr 
-- On IDENT reduce production expr -> expr MULT expr 
-- On HELP reduce production expr -> expr MULT expr 
-- On GT reduce production expr -> expr MULT expr 
-- On GE reduce production expr -> expr MULT expr 
-- On FUNCTION reduce production expr -> expr MULT expr 
-- On FOR reduce production expr -> expr MULT expr 
-- On FLOAT reduce production expr -> expr MULT expr 
-- On FALSE reduce production expr -> expr MULT expr 
-- On EQEQ reduce production expr -> expr MULT expr 
-- On EOF reduce production expr -> expr MULT expr 
-- On DIV reduce production expr -> expr MULT expr 
-- On COMPLEX reduce production expr -> expr MULT expr 
-- On COMMA reduce production expr -> expr MULT expr 
-- On BREAK reduce production expr -> expr MULT expr 
-- On BANG reduce production expr -> expr MULT expr 
-- On ANDVEC reduce production expr -> expr MULT expr 
-- On AND reduce production expr -> expr MULT expr 

State 64:
expr -> expr MODULUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 65

State 65:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr MODULUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr MODULUS expr 
-- On USEROP reduce production expr -> expr MODULUS expr 
-- On TRUE reduce production expr -> expr MODULUS expr 
-- On TILDE reduce production expr -> expr MODULUS expr 
-- On SEMICOLON reduce production expr -> expr MODULUS expr 
-- On RSUPASSIGN reduce production expr -> expr MODULUS expr 
-- On RPAREN reduce production expr -> expr MODULUS expr 
-- On REPEAT reduce production expr -> expr MODULUS expr 
-- On RBRACKET reduce production expr -> expr MODULUS expr 
-- On RBRACE reduce production expr -> expr MODULUS expr 
-- On RASSIGN reduce production expr -> expr MODULUS expr 
-- On PLUS reduce production expr -> expr MODULUS expr 
-- On OUTERPROD reduce production expr -> expr MODULUS expr 
-- On ORVEC reduce production expr -> expr MODULUS expr 
-- On OR reduce production expr -> expr MODULUS expr 
-- On NULL reduce production expr -> expr MODULUS expr 
-- On NEXT reduce production expr -> expr MODULUS expr 
-- On NEQ reduce production expr -> expr MODULUS expr 
-- On NA reduce production expr -> expr MODULUS expr 
-- On MULT reduce production expr -> expr MODULUS expr 
-- On MODULUS reduce production expr -> expr MODULUS expr 
-- On MINUS reduce production expr -> expr MODULUS expr 
-- On MATRIXMULT reduce production expr -> expr MODULUS expr 
-- On LT reduce production expr -> expr MODULUS expr 
-- On LE reduce production expr -> expr MODULUS expr 
-- On LBRACE reduce production expr -> expr MODULUS expr 
-- On KRONECKERPROD reduce production expr -> expr MODULUS expr 
-- On INTDIV reduce production expr -> expr MODULUS expr 
-- On INT reduce production expr -> expr MODULUS expr 
-- On IF reduce production expr -> expr MODULUS expr 
-- On IDENT reduce production expr -> expr MODULUS expr 
-- On HELP reduce production expr -> expr MODULUS expr 
-- On GT reduce production expr -> expr MODULUS expr 
-- On GE reduce production expr -> expr MODULUS expr 
-- On FUNCTION reduce production expr -> expr MODULUS expr 
-- On FOR reduce production expr -> expr MODULUS expr 
-- On FLOAT reduce production expr -> expr MODULUS expr 
-- On FALSE reduce production expr -> expr MODULUS expr 
-- On EQEQ reduce production expr -> expr MODULUS expr 
-- On EOF reduce production expr -> expr MODULUS expr 
-- On DIV reduce production expr -> expr MODULUS expr 
-- On COMPLEX reduce production expr -> expr MODULUS expr 
-- On COMMA reduce production expr -> expr MODULUS expr 
-- On BREAK reduce production expr -> expr MODULUS expr 
-- On BANG reduce production expr -> expr MODULUS expr 
-- On ANDVEC reduce production expr -> expr MODULUS expr 
-- On AND reduce production expr -> expr MODULUS expr 

State 66:
expr -> expr EXP . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 67

State 67:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr EXP expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr EXP expr 
-- On USEROP reduce production expr -> expr EXP expr 
-- On TRUE reduce production expr -> expr EXP expr 
-- On TILDE reduce production expr -> expr EXP expr 
-- On SEMICOLON reduce production expr -> expr EXP expr 
-- On RSUPASSIGN reduce production expr -> expr EXP expr 
-- On RPAREN reduce production expr -> expr EXP expr 
-- On REPEAT reduce production expr -> expr EXP expr 
-- On RBRACKET reduce production expr -> expr EXP expr 
-- On RBRACE reduce production expr -> expr EXP expr 
-- On RASSIGN reduce production expr -> expr EXP expr 
-- On PLUS reduce production expr -> expr EXP expr 
-- On OUTERPROD reduce production expr -> expr EXP expr 
-- On ORVEC reduce production expr -> expr EXP expr 
-- On OR reduce production expr -> expr EXP expr 
-- On NULL reduce production expr -> expr EXP expr 
-- On NEXT reduce production expr -> expr EXP expr 
-- On NEQ reduce production expr -> expr EXP expr 
-- On NA reduce production expr -> expr EXP expr 
-- On MULT reduce production expr -> expr EXP expr 
-- On MODULUS reduce production expr -> expr EXP expr 
-- On MINUS reduce production expr -> expr EXP expr 
-- On MATRIXMULT reduce production expr -> expr EXP expr 
-- On LT reduce production expr -> expr EXP expr 
-- On LE reduce production expr -> expr EXP expr 
-- On LBRACE reduce production expr -> expr EXP expr 
-- On KRONECKERPROD reduce production expr -> expr EXP expr 
-- On INTDIV reduce production expr -> expr EXP expr 
-- On INT reduce production expr -> expr EXP expr 
-- On IF reduce production expr -> expr EXP expr 
-- On IDENT reduce production expr -> expr EXP expr 
-- On HELP reduce production expr -> expr EXP expr 
-- On GT reduce production expr -> expr EXP expr 
-- On GE reduce production expr -> expr EXP expr 
-- On FUNCTION reduce production expr -> expr EXP expr 
-- On FOR reduce production expr -> expr EXP expr 
-- On FLOAT reduce production expr -> expr EXP expr 
-- On FALSE reduce production expr -> expr EXP expr 
-- On EXP reduce production expr -> expr EXP expr 
-- On EQEQ reduce production expr -> expr EXP expr 
-- On EOF reduce production expr -> expr EXP expr 
-- On DIV reduce production expr -> expr EXP expr 
-- On COMPLEX reduce production expr -> expr EXP expr 
-- On COMMA reduce production expr -> expr EXP expr 
-- On COLON reduce production expr -> expr EXP expr 
-- On BREAK reduce production expr -> expr EXP expr 
-- On BANG reduce production expr -> expr EXP expr 
-- On ANDVEC reduce production expr -> expr EXP expr 
-- On AND reduce production expr -> expr EXP expr 

State 68:
expr -> expr ATTRIBUTE . IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On IDENT shift to state 69

State 69:
expr -> expr ATTRIBUTE IDENT . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> expr ATTRIBUTE IDENT 
-- On USEROP reduce production expr -> expr ATTRIBUTE IDENT 
-- On TRUE reduce production expr -> expr ATTRIBUTE IDENT 
-- On TILDE reduce production expr -> expr ATTRIBUTE IDENT 
-- On SEMICOLON reduce production expr -> expr ATTRIBUTE IDENT 
-- On RSUPASSIGN reduce production expr -> expr ATTRIBUTE IDENT 
-- On RPAREN reduce production expr -> expr ATTRIBUTE IDENT 
-- On REPEAT reduce production expr -> expr ATTRIBUTE IDENT 
-- On RBRACKET reduce production expr -> expr ATTRIBUTE IDENT 
-- On RBRACE reduce production expr -> expr ATTRIBUTE IDENT 
-- On RASSIGN reduce production expr -> expr ATTRIBUTE IDENT 
-- On PLUS reduce production expr -> expr ATTRIBUTE IDENT 
-- On OUTERPROD reduce production expr -> expr ATTRIBUTE IDENT 
-- On ORVEC reduce production expr -> expr ATTRIBUTE IDENT 
-- On OR reduce production expr -> expr ATTRIBUTE IDENT 
-- On NULL reduce production expr -> expr ATTRIBUTE IDENT 
-- On NEXT reduce production expr -> expr ATTRIBUTE IDENT 
-- On NEQ reduce production expr -> expr ATTRIBUTE IDENT 
-- On NA reduce production expr -> expr ATTRIBUTE IDENT 
-- On MULT reduce production expr -> expr ATTRIBUTE IDENT 
-- On MODULUS reduce production expr -> expr ATTRIBUTE IDENT 
-- On MINUS reduce production expr -> expr ATTRIBUTE IDENT 
-- On MATRIXMULT reduce production expr -> expr ATTRIBUTE IDENT 
-- On LT reduce production expr -> expr ATTRIBUTE IDENT 
-- On LPAREN reduce production expr -> expr ATTRIBUTE IDENT 
-- On LISTSUBSET reduce production expr -> expr ATTRIBUTE IDENT 
-- On LE reduce production expr -> expr ATTRIBUTE IDENT 
-- On LBRACKET reduce production expr -> expr ATTRIBUTE IDENT 
-- On LBRACE reduce production expr -> expr ATTRIBUTE IDENT 
-- On KRONECKERPROD reduce production expr -> expr ATTRIBUTE IDENT 
-- On INTDIV reduce production expr -> expr ATTRIBUTE IDENT 
-- On INT reduce production expr -> expr ATTRIBUTE IDENT 
-- On IF reduce production expr -> expr ATTRIBUTE IDENT 
-- On IDENT reduce production expr -> expr ATTRIBUTE IDENT 
-- On HELP reduce production expr -> expr ATTRIBUTE IDENT 
-- On GT reduce production expr -> expr ATTRIBUTE IDENT 
-- On GE reduce production expr -> expr ATTRIBUTE IDENT 
-- On FUNCTION reduce production expr -> expr ATTRIBUTE IDENT 
-- On FOR reduce production expr -> expr ATTRIBUTE IDENT 
-- On FLOAT reduce production expr -> expr ATTRIBUTE IDENT 
-- On FALSE reduce production expr -> expr ATTRIBUTE IDENT 
-- On EXP reduce production expr -> expr ATTRIBUTE IDENT 
-- On EQEQ reduce production expr -> expr ATTRIBUTE IDENT 
-- On EOF reduce production expr -> expr ATTRIBUTE IDENT 
-- On DIV reduce production expr -> expr ATTRIBUTE IDENT 
-- On COMPLEX reduce production expr -> expr ATTRIBUTE IDENT 
-- On COMMA reduce production expr -> expr ATTRIBUTE IDENT 
-- On COLON reduce production expr -> expr ATTRIBUTE IDENT 
-- On BREAK reduce production expr -> expr ATTRIBUTE IDENT 
-- On BANG reduce production expr -> expr ATTRIBUTE IDENT 
-- On ATTRIBUTE reduce production expr -> expr ATTRIBUTE IDENT 
-- On ANDVEC reduce production expr -> expr ATTRIBUTE IDENT 
-- On AND reduce production expr -> expr ATTRIBUTE IDENT 

State 70:
expr -> expr COLON . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 71

State 71:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr COLON expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr COLON expr 
-- On USEROP reduce production expr -> expr COLON expr 
-- On TRUE reduce production expr -> expr COLON expr 
-- On TILDE reduce production expr -> expr COLON expr 
-- On SEMICOLON reduce production expr -> expr COLON expr 
-- On RSUPASSIGN reduce production expr -> expr COLON expr 
-- On RPAREN reduce production expr -> expr COLON expr 
-- On REPEAT reduce production expr -> expr COLON expr 
-- On RBRACKET reduce production expr -> expr COLON expr 
-- On RBRACE reduce production expr -> expr COLON expr 
-- On RASSIGN reduce production expr -> expr COLON expr 
-- On PLUS reduce production expr -> expr COLON expr 
-- On OUTERPROD reduce production expr -> expr COLON expr 
-- On ORVEC reduce production expr -> expr COLON expr 
-- On OR reduce production expr -> expr COLON expr 
-- On NULL reduce production expr -> expr COLON expr 
-- On NEXT reduce production expr -> expr COLON expr 
-- On NEQ reduce production expr -> expr COLON expr 
-- On NA reduce production expr -> expr COLON expr 
-- On MULT reduce production expr -> expr COLON expr 
-- On MODULUS reduce production expr -> expr COLON expr 
-- On MINUS reduce production expr -> expr COLON expr 
-- On MATRIXMULT reduce production expr -> expr COLON expr 
-- On LT reduce production expr -> expr COLON expr 
-- On LE reduce production expr -> expr COLON expr 
-- On LBRACE reduce production expr -> expr COLON expr 
-- On KRONECKERPROD reduce production expr -> expr COLON expr 
-- On INTDIV reduce production expr -> expr COLON expr 
-- On INT reduce production expr -> expr COLON expr 
-- On IF reduce production expr -> expr COLON expr 
-- On IDENT reduce production expr -> expr COLON expr 
-- On HELP reduce production expr -> expr COLON expr 
-- On GT reduce production expr -> expr COLON expr 
-- On GE reduce production expr -> expr COLON expr 
-- On FUNCTION reduce production expr -> expr COLON expr 
-- On FOR reduce production expr -> expr COLON expr 
-- On FLOAT reduce production expr -> expr COLON expr 
-- On FALSE reduce production expr -> expr COLON expr 
-- On EQEQ reduce production expr -> expr COLON expr 
-- On EOF reduce production expr -> expr COLON expr 
-- On DIV reduce production expr -> expr COLON expr 
-- On COMPLEX reduce production expr -> expr COLON expr 
-- On COMMA reduce production expr -> expr COLON expr 
-- On COLON reduce production expr -> expr COLON expr 
-- On BREAK reduce production expr -> expr COLON expr 
-- On BANG reduce production expr -> expr COLON expr 
-- On ANDVEC reduce production expr -> expr COLON expr 
-- On AND reduce production expr -> expr COLON expr 

State 72:
expr -> expr MATRIXMULT . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 73

State 73:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr MATRIXMULT expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr MATRIXMULT expr 
-- On USEROP reduce production expr -> expr MATRIXMULT expr 
-- On TRUE reduce production expr -> expr MATRIXMULT expr 
-- On TILDE reduce production expr -> expr MATRIXMULT expr 
-- On SEMICOLON reduce production expr -> expr MATRIXMULT expr 
-- On RSUPASSIGN reduce production expr -> expr MATRIXMULT expr 
-- On RPAREN reduce production expr -> expr MATRIXMULT expr 
-- On REPEAT reduce production expr -> expr MATRIXMULT expr 
-- On RBRACKET reduce production expr -> expr MATRIXMULT expr 
-- On RBRACE reduce production expr -> expr MATRIXMULT expr 
-- On RASSIGN reduce production expr -> expr MATRIXMULT expr 
-- On PLUS reduce production expr -> expr MATRIXMULT expr 
-- On OUTERPROD reduce production expr -> expr MATRIXMULT expr 
-- On ORVEC reduce production expr -> expr MATRIXMULT expr 
-- On OR reduce production expr -> expr MATRIXMULT expr 
-- On NULL reduce production expr -> expr MATRIXMULT expr 
-- On NEXT reduce production expr -> expr MATRIXMULT expr 
-- On NEQ reduce production expr -> expr MATRIXMULT expr 
-- On NA reduce production expr -> expr MATRIXMULT expr 
-- On MULT reduce production expr -> expr MATRIXMULT expr 
-- On MODULUS reduce production expr -> expr MATRIXMULT expr 
-- On MINUS reduce production expr -> expr MATRIXMULT expr 
-- On MATRIXMULT reduce production expr -> expr MATRIXMULT expr 
-- On LT reduce production expr -> expr MATRIXMULT expr 
-- On LE reduce production expr -> expr MATRIXMULT expr 
-- On LBRACE reduce production expr -> expr MATRIXMULT expr 
-- On KRONECKERPROD reduce production expr -> expr MATRIXMULT expr 
-- On INTDIV reduce production expr -> expr MATRIXMULT expr 
-- On INT reduce production expr -> expr MATRIXMULT expr 
-- On IF reduce production expr -> expr MATRIXMULT expr 
-- On IDENT reduce production expr -> expr MATRIXMULT expr 
-- On HELP reduce production expr -> expr MATRIXMULT expr 
-- On GT reduce production expr -> expr MATRIXMULT expr 
-- On GE reduce production expr -> expr MATRIXMULT expr 
-- On FUNCTION reduce production expr -> expr MATRIXMULT expr 
-- On FOR reduce production expr -> expr MATRIXMULT expr 
-- On FLOAT reduce production expr -> expr MATRIXMULT expr 
-- On FALSE reduce production expr -> expr MATRIXMULT expr 
-- On EQEQ reduce production expr -> expr MATRIXMULT expr 
-- On EOF reduce production expr -> expr MATRIXMULT expr 
-- On DIV reduce production expr -> expr MATRIXMULT expr 
-- On COMPLEX reduce production expr -> expr MATRIXMULT expr 
-- On COMMA reduce production expr -> expr MATRIXMULT expr 
-- On BREAK reduce production expr -> expr MATRIXMULT expr 
-- On BANG reduce production expr -> expr MATRIXMULT expr 
-- On ANDVEC reduce production expr -> expr MATRIXMULT expr 
-- On AND reduce production expr -> expr MATRIXMULT expr 

State 74:
expr -> expr KRONECKERPROD . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 75

State 75:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr KRONECKERPROD expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr KRONECKERPROD expr 
-- On USEROP reduce production expr -> expr KRONECKERPROD expr 
-- On TRUE reduce production expr -> expr KRONECKERPROD expr 
-- On TILDE reduce production expr -> expr KRONECKERPROD expr 
-- On SEMICOLON reduce production expr -> expr KRONECKERPROD expr 
-- On RSUPASSIGN reduce production expr -> expr KRONECKERPROD expr 
-- On RPAREN reduce production expr -> expr KRONECKERPROD expr 
-- On REPEAT reduce production expr -> expr KRONECKERPROD expr 
-- On RBRACKET reduce production expr -> expr KRONECKERPROD expr 
-- On RBRACE reduce production expr -> expr KRONECKERPROD expr 
-- On RASSIGN reduce production expr -> expr KRONECKERPROD expr 
-- On PLUS reduce production expr -> expr KRONECKERPROD expr 
-- On OUTERPROD reduce production expr -> expr KRONECKERPROD expr 
-- On ORVEC reduce production expr -> expr KRONECKERPROD expr 
-- On OR reduce production expr -> expr KRONECKERPROD expr 
-- On NULL reduce production expr -> expr KRONECKERPROD expr 
-- On NEXT reduce production expr -> expr KRONECKERPROD expr 
-- On NEQ reduce production expr -> expr KRONECKERPROD expr 
-- On NA reduce production expr -> expr KRONECKERPROD expr 
-- On MULT reduce production expr -> expr KRONECKERPROD expr 
-- On MODULUS reduce production expr -> expr KRONECKERPROD expr 
-- On MINUS reduce production expr -> expr KRONECKERPROD expr 
-- On MATRIXMULT reduce production expr -> expr KRONECKERPROD expr 
-- On LT reduce production expr -> expr KRONECKERPROD expr 
-- On LE reduce production expr -> expr KRONECKERPROD expr 
-- On LBRACE reduce production expr -> expr KRONECKERPROD expr 
-- On KRONECKERPROD reduce production expr -> expr KRONECKERPROD expr 
-- On INTDIV reduce production expr -> expr KRONECKERPROD expr 
-- On INT reduce production expr -> expr KRONECKERPROD expr 
-- On IF reduce production expr -> expr KRONECKERPROD expr 
-- On IDENT reduce production expr -> expr KRONECKERPROD expr 
-- On HELP reduce production expr -> expr KRONECKERPROD expr 
-- On GT reduce production expr -> expr KRONECKERPROD expr 
-- On GE reduce production expr -> expr KRONECKERPROD expr 
-- On FUNCTION reduce production expr -> expr KRONECKERPROD expr 
-- On FOR reduce production expr -> expr KRONECKERPROD expr 
-- On FLOAT reduce production expr -> expr KRONECKERPROD expr 
-- On FALSE reduce production expr -> expr KRONECKERPROD expr 
-- On EQEQ reduce production expr -> expr KRONECKERPROD expr 
-- On EOF reduce production expr -> expr KRONECKERPROD expr 
-- On DIV reduce production expr -> expr KRONECKERPROD expr 
-- On COMPLEX reduce production expr -> expr KRONECKERPROD expr 
-- On COMMA reduce production expr -> expr KRONECKERPROD expr 
-- On BREAK reduce production expr -> expr KRONECKERPROD expr 
-- On BANG reduce production expr -> expr KRONECKERPROD expr 
-- On ANDVEC reduce production expr -> expr KRONECKERPROD expr 
-- On AND reduce production expr -> expr KRONECKERPROD expr 

State 76:
expr -> expr INTDIV . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 77

State 77:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr INTDIV expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr INTDIV expr 
-- On USEROP reduce production expr -> expr INTDIV expr 
-- On TRUE reduce production expr -> expr INTDIV expr 
-- On TILDE reduce production expr -> expr INTDIV expr 
-- On SEMICOLON reduce production expr -> expr INTDIV expr 
-- On RSUPASSIGN reduce production expr -> expr INTDIV expr 
-- On RPAREN reduce production expr -> expr INTDIV expr 
-- On REPEAT reduce production expr -> expr INTDIV expr 
-- On RBRACKET reduce production expr -> expr INTDIV expr 
-- On RBRACE reduce production expr -> expr INTDIV expr 
-- On RASSIGN reduce production expr -> expr INTDIV expr 
-- On PLUS reduce production expr -> expr INTDIV expr 
-- On OUTERPROD reduce production expr -> expr INTDIV expr 
-- On ORVEC reduce production expr -> expr INTDIV expr 
-- On OR reduce production expr -> expr INTDIV expr 
-- On NULL reduce production expr -> expr INTDIV expr 
-- On NEXT reduce production expr -> expr INTDIV expr 
-- On NEQ reduce production expr -> expr INTDIV expr 
-- On NA reduce production expr -> expr INTDIV expr 
-- On MULT reduce production expr -> expr INTDIV expr 
-- On MODULUS reduce production expr -> expr INTDIV expr 
-- On MINUS reduce production expr -> expr INTDIV expr 
-- On MATRIXMULT reduce production expr -> expr INTDIV expr 
-- On LT reduce production expr -> expr INTDIV expr 
-- On LE reduce production expr -> expr INTDIV expr 
-- On LBRACE reduce production expr -> expr INTDIV expr 
-- On KRONECKERPROD reduce production expr -> expr INTDIV expr 
-- On INTDIV reduce production expr -> expr INTDIV expr 
-- On INT reduce production expr -> expr INTDIV expr 
-- On IF reduce production expr -> expr INTDIV expr 
-- On IDENT reduce production expr -> expr INTDIV expr 
-- On HELP reduce production expr -> expr INTDIV expr 
-- On GT reduce production expr -> expr INTDIV expr 
-- On GE reduce production expr -> expr INTDIV expr 
-- On FUNCTION reduce production expr -> expr INTDIV expr 
-- On FOR reduce production expr -> expr INTDIV expr 
-- On FLOAT reduce production expr -> expr INTDIV expr 
-- On FALSE reduce production expr -> expr INTDIV expr 
-- On EQEQ reduce production expr -> expr INTDIV expr 
-- On EOF reduce production expr -> expr INTDIV expr 
-- On DIV reduce production expr -> expr INTDIV expr 
-- On COMPLEX reduce production expr -> expr INTDIV expr 
-- On COMMA reduce production expr -> expr INTDIV expr 
-- On BREAK reduce production expr -> expr INTDIV expr 
-- On BANG reduce production expr -> expr INTDIV expr 
-- On ANDVEC reduce production expr -> expr INTDIV expr 
-- On AND reduce production expr -> expr INTDIV expr 

State 78:
expr -> expr MINUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 79

State 79:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr MINUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr MINUS expr 
-- On TRUE reduce production expr -> expr MINUS expr 
-- On TILDE reduce production expr -> expr MINUS expr 
-- On SEMICOLON reduce production expr -> expr MINUS expr 
-- On RSUPASSIGN reduce production expr -> expr MINUS expr 
-- On RPAREN reduce production expr -> expr MINUS expr 
-- On REPEAT reduce production expr -> expr MINUS expr 
-- On RBRACKET reduce production expr -> expr MINUS expr 
-- On RBRACE reduce production expr -> expr MINUS expr 
-- On RASSIGN reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On ORVEC reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On NULL reduce production expr -> expr MINUS expr 
-- On NEXT reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On NA reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LE reduce production expr -> expr MINUS expr 
-- On LBRACE reduce production expr -> expr MINUS expr 
-- On INT reduce production expr -> expr MINUS expr 
-- On IF reduce production expr -> expr MINUS expr 
-- On IDENT reduce production expr -> expr MINUS expr 
-- On HELP reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GE reduce production expr -> expr MINUS expr 
-- On FUNCTION reduce production expr -> expr MINUS expr 
-- On FOR reduce production expr -> expr MINUS expr 
-- On FLOAT reduce production expr -> expr MINUS expr 
-- On FALSE reduce production expr -> expr MINUS expr 
-- On EQEQ reduce production expr -> expr MINUS expr 
-- On EOF reduce production expr -> expr MINUS expr 
-- On COMPLEX reduce production expr -> expr MINUS expr 
-- On COMMA reduce production expr -> expr MINUS expr 
-- On BREAK reduce production expr -> expr MINUS expr 
-- On BANG reduce production expr -> expr MINUS expr 
-- On ANDVEC reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 80:
expr -> expr DIV . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 81

State 81:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr DIV expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On OUTERPROD shift to state 46
-- On MODULUS shift to state 64
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr DIV expr 
-- On TRUE reduce production expr -> expr DIV expr 
-- On TILDE reduce production expr -> expr DIV expr 
-- On SEMICOLON reduce production expr -> expr DIV expr 
-- On RSUPASSIGN reduce production expr -> expr DIV expr 
-- On RPAREN reduce production expr -> expr DIV expr 
-- On REPEAT reduce production expr -> expr DIV expr 
-- On RBRACKET reduce production expr -> expr DIV expr 
-- On RBRACE reduce production expr -> expr DIV expr 
-- On RASSIGN reduce production expr -> expr DIV expr 
-- On PLUS reduce production expr -> expr DIV expr 
-- On ORVEC reduce production expr -> expr DIV expr 
-- On OR reduce production expr -> expr DIV expr 
-- On NULL reduce production expr -> expr DIV expr 
-- On NEXT reduce production expr -> expr DIV expr 
-- On NEQ reduce production expr -> expr DIV expr 
-- On NA reduce production expr -> expr DIV expr 
-- On MULT reduce production expr -> expr DIV expr 
-- On MINUS reduce production expr -> expr DIV expr 
-- On LT reduce production expr -> expr DIV expr 
-- On LE reduce production expr -> expr DIV expr 
-- On LBRACE reduce production expr -> expr DIV expr 
-- On INT reduce production expr -> expr DIV expr 
-- On IF reduce production expr -> expr DIV expr 
-- On IDENT reduce production expr -> expr DIV expr 
-- On HELP reduce production expr -> expr DIV expr 
-- On GT reduce production expr -> expr DIV expr 
-- On GE reduce production expr -> expr DIV expr 
-- On FUNCTION reduce production expr -> expr DIV expr 
-- On FOR reduce production expr -> expr DIV expr 
-- On FLOAT reduce production expr -> expr DIV expr 
-- On FALSE reduce production expr -> expr DIV expr 
-- On EQEQ reduce production expr -> expr DIV expr 
-- On EOF reduce production expr -> expr DIV expr 
-- On DIV reduce production expr -> expr DIV expr 
-- On COMPLEX reduce production expr -> expr DIV expr 
-- On COMMA reduce production expr -> expr DIV expr 
-- On BREAK reduce production expr -> expr DIV expr 
-- On BANG reduce production expr -> expr DIV expr 
-- On ANDVEC reduce production expr -> expr DIV expr 
-- On AND reduce production expr -> expr DIV expr 

State 82:
expr -> expr LT . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 83

State 83:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr LT expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr LT expr 
-- On TRUE reduce production expr -> expr LT expr 
-- On TILDE reduce production expr -> expr LT expr 
-- On SEMICOLON reduce production expr -> expr LT expr 
-- On RSUPASSIGN reduce production expr -> expr LT expr 
-- On RPAREN reduce production expr -> expr LT expr 
-- On REPEAT reduce production expr -> expr LT expr 
-- On RBRACKET reduce production expr -> expr LT expr 
-- On RBRACE reduce production expr -> expr LT expr 
-- On RASSIGN reduce production expr -> expr LT expr 
-- On ORVEC reduce production expr -> expr LT expr 
-- On OR reduce production expr -> expr LT expr 
-- On NULL reduce production expr -> expr LT expr 
-- On NEXT reduce production expr -> expr LT expr 
-- On NEQ reduce production expr -> expr LT expr 
-- On NA reduce production expr -> expr LT expr 
-- On LT reduce production expr -> expr LT expr 
-- On LE reduce production expr -> expr LT expr 
-- On LBRACE reduce production expr -> expr LT expr 
-- On INT reduce production expr -> expr LT expr 
-- On IF reduce production expr -> expr LT expr 
-- On IDENT reduce production expr -> expr LT expr 
-- On HELP reduce production expr -> expr LT expr 
-- On GT reduce production expr -> expr LT expr 
-- On GE reduce production expr -> expr LT expr 
-- On FUNCTION reduce production expr -> expr LT expr 
-- On FOR reduce production expr -> expr LT expr 
-- On FLOAT reduce production expr -> expr LT expr 
-- On FALSE reduce production expr -> expr LT expr 
-- On EQEQ reduce production expr -> expr LT expr 
-- On EOF reduce production expr -> expr LT expr 
-- On COMPLEX reduce production expr -> expr LT expr 
-- On COMMA reduce production expr -> expr LT expr 
-- On BREAK reduce production expr -> expr LT expr 
-- On BANG reduce production expr -> expr LT expr 
-- On ANDVEC reduce production expr -> expr LT expr 
-- On AND reduce production expr -> expr LT expr 

State 84:
expr -> expr LE . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 85

State 85:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr LE expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr LE expr 
-- On TRUE reduce production expr -> expr LE expr 
-- On TILDE reduce production expr -> expr LE expr 
-- On SEMICOLON reduce production expr -> expr LE expr 
-- On RSUPASSIGN reduce production expr -> expr LE expr 
-- On RPAREN reduce production expr -> expr LE expr 
-- On REPEAT reduce production expr -> expr LE expr 
-- On RBRACKET reduce production expr -> expr LE expr 
-- On RBRACE reduce production expr -> expr LE expr 
-- On RASSIGN reduce production expr -> expr LE expr 
-- On ORVEC reduce production expr -> expr LE expr 
-- On OR reduce production expr -> expr LE expr 
-- On NULL reduce production expr -> expr LE expr 
-- On NEXT reduce production expr -> expr LE expr 
-- On NEQ reduce production expr -> expr LE expr 
-- On NA reduce production expr -> expr LE expr 
-- On LT reduce production expr -> expr LE expr 
-- On LE reduce production expr -> expr LE expr 
-- On LBRACE reduce production expr -> expr LE expr 
-- On INT reduce production expr -> expr LE expr 
-- On IF reduce production expr -> expr LE expr 
-- On IDENT reduce production expr -> expr LE expr 
-- On HELP reduce production expr -> expr LE expr 
-- On GT reduce production expr -> expr LE expr 
-- On GE reduce production expr -> expr LE expr 
-- On FUNCTION reduce production expr -> expr LE expr 
-- On FOR reduce production expr -> expr LE expr 
-- On FLOAT reduce production expr -> expr LE expr 
-- On FALSE reduce production expr -> expr LE expr 
-- On EQEQ reduce production expr -> expr LE expr 
-- On EOF reduce production expr -> expr LE expr 
-- On COMPLEX reduce production expr -> expr LE expr 
-- On COMMA reduce production expr -> expr LE expr 
-- On BREAK reduce production expr -> expr LE expr 
-- On BANG reduce production expr -> expr LE expr 
-- On ANDVEC reduce production expr -> expr LE expr 
-- On AND reduce production expr -> expr LE expr 

State 86:
expr -> expr GT . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 87

State 87:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr GT expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr GT expr 
-- On TRUE reduce production expr -> expr GT expr 
-- On TILDE reduce production expr -> expr GT expr 
-- On SEMICOLON reduce production expr -> expr GT expr 
-- On RSUPASSIGN reduce production expr -> expr GT expr 
-- On RPAREN reduce production expr -> expr GT expr 
-- On REPEAT reduce production expr -> expr GT expr 
-- On RBRACKET reduce production expr -> expr GT expr 
-- On RBRACE reduce production expr -> expr GT expr 
-- On RASSIGN reduce production expr -> expr GT expr 
-- On ORVEC reduce production expr -> expr GT expr 
-- On OR reduce production expr -> expr GT expr 
-- On NULL reduce production expr -> expr GT expr 
-- On NEXT reduce production expr -> expr GT expr 
-- On NEQ reduce production expr -> expr GT expr 
-- On NA reduce production expr -> expr GT expr 
-- On LT reduce production expr -> expr GT expr 
-- On LE reduce production expr -> expr GT expr 
-- On LBRACE reduce production expr -> expr GT expr 
-- On INT reduce production expr -> expr GT expr 
-- On IF reduce production expr -> expr GT expr 
-- On IDENT reduce production expr -> expr GT expr 
-- On HELP reduce production expr -> expr GT expr 
-- On GT reduce production expr -> expr GT expr 
-- On GE reduce production expr -> expr GT expr 
-- On FUNCTION reduce production expr -> expr GT expr 
-- On FOR reduce production expr -> expr GT expr 
-- On FLOAT reduce production expr -> expr GT expr 
-- On FALSE reduce production expr -> expr GT expr 
-- On EQEQ reduce production expr -> expr GT expr 
-- On EOF reduce production expr -> expr GT expr 
-- On COMPLEX reduce production expr -> expr GT expr 
-- On COMMA reduce production expr -> expr GT expr 
-- On BREAK reduce production expr -> expr GT expr 
-- On BANG reduce production expr -> expr GT expr 
-- On ANDVEC reduce production expr -> expr GT expr 
-- On AND reduce production expr -> expr GT expr 

State 88:
expr -> expr GE . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 89

State 89:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr GE expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr GE expr 
-- On TRUE reduce production expr -> expr GE expr 
-- On TILDE reduce production expr -> expr GE expr 
-- On SEMICOLON reduce production expr -> expr GE expr 
-- On RSUPASSIGN reduce production expr -> expr GE expr 
-- On RPAREN reduce production expr -> expr GE expr 
-- On REPEAT reduce production expr -> expr GE expr 
-- On RBRACKET reduce production expr -> expr GE expr 
-- On RBRACE reduce production expr -> expr GE expr 
-- On RASSIGN reduce production expr -> expr GE expr 
-- On ORVEC reduce production expr -> expr GE expr 
-- On OR reduce production expr -> expr GE expr 
-- On NULL reduce production expr -> expr GE expr 
-- On NEXT reduce production expr -> expr GE expr 
-- On NEQ reduce production expr -> expr GE expr 
-- On NA reduce production expr -> expr GE expr 
-- On LT reduce production expr -> expr GE expr 
-- On LE reduce production expr -> expr GE expr 
-- On LBRACE reduce production expr -> expr GE expr 
-- On INT reduce production expr -> expr GE expr 
-- On IF reduce production expr -> expr GE expr 
-- On IDENT reduce production expr -> expr GE expr 
-- On HELP reduce production expr -> expr GE expr 
-- On GT reduce production expr -> expr GE expr 
-- On GE reduce production expr -> expr GE expr 
-- On FUNCTION reduce production expr -> expr GE expr 
-- On FOR reduce production expr -> expr GE expr 
-- On FLOAT reduce production expr -> expr GE expr 
-- On FALSE reduce production expr -> expr GE expr 
-- On EQEQ reduce production expr -> expr GE expr 
-- On EOF reduce production expr -> expr GE expr 
-- On COMPLEX reduce production expr -> expr GE expr 
-- On COMMA reduce production expr -> expr GE expr 
-- On BREAK reduce production expr -> expr GE expr 
-- On BANG reduce production expr -> expr GE expr 
-- On ANDVEC reduce production expr -> expr GE expr 
-- On AND reduce production expr -> expr GE expr 

State 90:
expr -> expr EQEQ . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 91

State 91:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr EQEQ expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On EXP shift to state 66
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr EQEQ expr 
-- On TRUE reduce production expr -> expr EQEQ expr 
-- On TILDE reduce production expr -> expr EQEQ expr 
-- On SEMICOLON reduce production expr -> expr EQEQ expr 
-- On RSUPASSIGN reduce production expr -> expr EQEQ expr 
-- On RPAREN reduce production expr -> expr EQEQ expr 
-- On REPEAT reduce production expr -> expr EQEQ expr 
-- On RBRACKET reduce production expr -> expr EQEQ expr 
-- On RBRACE reduce production expr -> expr EQEQ expr 
-- On RASSIGN reduce production expr -> expr EQEQ expr 
-- On ORVEC reduce production expr -> expr EQEQ expr 
-- On OR reduce production expr -> expr EQEQ expr 
-- On NULL reduce production expr -> expr EQEQ expr 
-- On NEXT reduce production expr -> expr EQEQ expr 
-- On NEQ reduce production expr -> expr EQEQ expr 
-- On NA reduce production expr -> expr EQEQ expr 
-- On LT reduce production expr -> expr EQEQ expr 
-- On LE reduce production expr -> expr EQEQ expr 
-- On LBRACE reduce production expr -> expr EQEQ expr 
-- On INT reduce production expr -> expr EQEQ expr 
-- On IF reduce production expr -> expr EQEQ expr 
-- On IDENT reduce production expr -> expr EQEQ expr 
-- On HELP reduce production expr -> expr EQEQ expr 
-- On GT reduce production expr -> expr EQEQ expr 
-- On GE reduce production expr -> expr EQEQ expr 
-- On FUNCTION reduce production expr -> expr EQEQ expr 
-- On FOR reduce production expr -> expr EQEQ expr 
-- On FLOAT reduce production expr -> expr EQEQ expr 
-- On FALSE reduce production expr -> expr EQEQ expr 
-- On EQEQ reduce production expr -> expr EQEQ expr 
-- On EOF reduce production expr -> expr EQEQ expr 
-- On COMPLEX reduce production expr -> expr EQEQ expr 
-- On COMMA reduce production expr -> expr EQEQ expr 
-- On BREAK reduce production expr -> expr EQEQ expr 
-- On BANG reduce production expr -> expr EQEQ expr 
-- On ANDVEC reduce production expr -> expr EQEQ expr 
-- On AND reduce production expr -> expr EQEQ expr 

State 92:
expr -> expr ANDVEC . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 93

State 93:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr ANDVEC expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr ANDVEC expr 
-- On TRUE reduce production expr -> expr ANDVEC expr 
-- On TILDE reduce production expr -> expr ANDVEC expr 
-- On SEMICOLON reduce production expr -> expr ANDVEC expr 
-- On RSUPASSIGN reduce production expr -> expr ANDVEC expr 
-- On RPAREN reduce production expr -> expr ANDVEC expr 
-- On REPEAT reduce production expr -> expr ANDVEC expr 
-- On RBRACKET reduce production expr -> expr ANDVEC expr 
-- On RBRACE reduce production expr -> expr ANDVEC expr 
-- On RASSIGN reduce production expr -> expr ANDVEC expr 
-- On ORVEC reduce production expr -> expr ANDVEC expr 
-- On OR reduce production expr -> expr ANDVEC expr 
-- On NULL reduce production expr -> expr ANDVEC expr 
-- On NEXT reduce production expr -> expr ANDVEC expr 
-- On NA reduce production expr -> expr ANDVEC expr 
-- On LBRACE reduce production expr -> expr ANDVEC expr 
-- On INT reduce production expr -> expr ANDVEC expr 
-- On IF reduce production expr -> expr ANDVEC expr 
-- On IDENT reduce production expr -> expr ANDVEC expr 
-- On HELP reduce production expr -> expr ANDVEC expr 
-- On FUNCTION reduce production expr -> expr ANDVEC expr 
-- On FOR reduce production expr -> expr ANDVEC expr 
-- On FLOAT reduce production expr -> expr ANDVEC expr 
-- On FALSE reduce production expr -> expr ANDVEC expr 
-- On EOF reduce production expr -> expr ANDVEC expr 
-- On COMPLEX reduce production expr -> expr ANDVEC expr 
-- On COMMA reduce production expr -> expr ANDVEC expr 
-- On BREAK reduce production expr -> expr ANDVEC expr 
-- On BANG reduce production expr -> expr ANDVEC expr 
-- On ANDVEC reduce production expr -> expr ANDVEC expr 
-- On AND reduce production expr -> expr ANDVEC expr 

State 94:
expr -> expr AND . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 95

State 95:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr AND expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> expr AND expr 
-- On TRUE reduce production expr -> expr AND expr 
-- On TILDE reduce production expr -> expr AND expr 
-- On SEMICOLON reduce production expr -> expr AND expr 
-- On RSUPASSIGN reduce production expr -> expr AND expr 
-- On RPAREN reduce production expr -> expr AND expr 
-- On REPEAT reduce production expr -> expr AND expr 
-- On RBRACKET reduce production expr -> expr AND expr 
-- On RBRACE reduce production expr -> expr AND expr 
-- On RASSIGN reduce production expr -> expr AND expr 
-- On ORVEC reduce production expr -> expr AND expr 
-- On OR reduce production expr -> expr AND expr 
-- On NULL reduce production expr -> expr AND expr 
-- On NEXT reduce production expr -> expr AND expr 
-- On NA reduce production expr -> expr AND expr 
-- On LBRACE reduce production expr -> expr AND expr 
-- On INT reduce production expr -> expr AND expr 
-- On IF reduce production expr -> expr AND expr 
-- On IDENT reduce production expr -> expr AND expr 
-- On HELP reduce production expr -> expr AND expr 
-- On FUNCTION reduce production expr -> expr AND expr 
-- On FOR reduce production expr -> expr AND expr 
-- On FLOAT reduce production expr -> expr AND expr 
-- On FALSE reduce production expr -> expr AND expr 
-- On EOF reduce production expr -> expr AND expr 
-- On COMPLEX reduce production expr -> expr AND expr 
-- On COMMA reduce production expr -> expr AND expr 
-- On BREAK reduce production expr -> expr AND expr 
-- On BANG reduce production expr -> expr AND expr 
-- On ANDVEC reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 

State 96:
expr -> expr OR . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 97

State 97:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr OR expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr OR expr 
-- On TRUE reduce production expr -> expr OR expr 
-- On TILDE reduce production expr -> expr OR expr 
-- On SEMICOLON reduce production expr -> expr OR expr 
-- On RSUPASSIGN reduce production expr -> expr OR expr 
-- On RPAREN reduce production expr -> expr OR expr 
-- On REPEAT reduce production expr -> expr OR expr 
-- On RBRACKET reduce production expr -> expr OR expr 
-- On RBRACE reduce production expr -> expr OR expr 
-- On RASSIGN reduce production expr -> expr OR expr 
-- On ORVEC reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On NULL reduce production expr -> expr OR expr 
-- On NEXT reduce production expr -> expr OR expr 
-- On NA reduce production expr -> expr OR expr 
-- On LBRACE reduce production expr -> expr OR expr 
-- On INT reduce production expr -> expr OR expr 
-- On IF reduce production expr -> expr OR expr 
-- On IDENT reduce production expr -> expr OR expr 
-- On HELP reduce production expr -> expr OR expr 
-- On FUNCTION reduce production expr -> expr OR expr 
-- On FOR reduce production expr -> expr OR expr 
-- On FLOAT reduce production expr -> expr OR expr 
-- On FALSE reduce production expr -> expr OR expr 
-- On EOF reduce production expr -> expr OR expr 
-- On COMPLEX reduce production expr -> expr OR expr 
-- On COMMA reduce production expr -> expr OR expr 
-- On BREAK reduce production expr -> expr OR expr 
-- On BANG reduce production expr -> expr OR expr 

State 98:
expr -> expr HELP . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 99

State 99:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr HELP expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr HELP expr 
-- On TRUE reduce production expr -> expr HELP expr 
-- On SEMICOLON reduce production expr -> expr HELP expr 
-- On RPAREN reduce production expr -> expr HELP expr 
-- On REPEAT reduce production expr -> expr HELP expr 
-- On RBRACKET reduce production expr -> expr HELP expr 
-- On RBRACE reduce production expr -> expr HELP expr 
-- On NULL reduce production expr -> expr HELP expr 
-- On NEXT reduce production expr -> expr HELP expr 
-- On NA reduce production expr -> expr HELP expr 
-- On LBRACE reduce production expr -> expr HELP expr 
-- On INT reduce production expr -> expr HELP expr 
-- On IF reduce production expr -> expr HELP expr 
-- On IDENT reduce production expr -> expr HELP expr 
-- On HELP reduce production expr -> expr HELP expr 
-- On FUNCTION reduce production expr -> expr HELP expr 
-- On FOR reduce production expr -> expr HELP expr 
-- On FLOAT reduce production expr -> expr HELP expr 
-- On FALSE reduce production expr -> expr HELP expr 
-- On EOF reduce production expr -> expr HELP expr 
-- On COMPLEX reduce production expr -> expr HELP expr 
-- On COMMA reduce production expr -> expr HELP expr 
-- On BREAK reduce production expr -> expr HELP expr 
-- On BANG reduce production expr -> expr HELP expr 

State 100:
expr -> expr LBRACKET LBRACKET . args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On STRING shift to state 39
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 51
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 101
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 104
-- On args shift to state 105
-- On arg shift to state 108
-- On RBRACKET reduce production args -> 

State 101:
arg -> IDENT . EQASSIGN [ RPAREN RBRACKET COMMA ]
arg -> IDENT . EQASSIGN expr [ RPAREN RBRACKET COMMA ]
ident -> IDENT . [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LASSIGN KRONECKERPROD INTDIV HELP GT GE EXP EQEQ EQASSIGN DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
ident -> IDENT . COLON2 IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LASSIGN KRONECKERPROD INTDIV HELP GT GE EXP EQEQ EQASSIGN DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
ident -> IDENT . COLON3 IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LSUPASSIGN LPAREN LISTSUBSET LE LBRACKET LASSIGN KRONECKERPROD INTDIV HELP GT GE EXP EQEQ EQASSIGN DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
-- On EQASSIGN shift to state 102
-- On COLON3 shift to state 15
-- On COLON2 shift to state 17
-- On USEROP reduce production ident -> IDENT 
-- On TILDE reduce production ident -> IDENT 
-- On RSUPASSIGN reduce production ident -> IDENT 
-- On RPAREN reduce production ident -> IDENT 
-- On RBRACKET reduce production ident -> IDENT 
-- On RASSIGN reduce production ident -> IDENT 
-- On PLUS reduce production ident -> IDENT 
-- On OUTERPROD reduce production ident -> IDENT 
-- On ORVEC reduce production ident -> IDENT 
-- On OR reduce production ident -> IDENT 
-- On NEQ reduce production ident -> IDENT 
-- On MULT reduce production ident -> IDENT 
-- On MODULUS reduce production ident -> IDENT 
-- On MINUS reduce production ident -> IDENT 
-- On MATRIXMULT reduce production ident -> IDENT 
-- On LT reduce production ident -> IDENT 
-- On LSUPASSIGN reduce production ident -> IDENT 
-- On LPAREN reduce production ident -> IDENT 
-- On LISTSUBSET reduce production ident -> IDENT 
-- On LE reduce production ident -> IDENT 
-- On LBRACKET reduce production ident -> IDENT 
-- On LASSIGN reduce production ident -> IDENT 
-- On KRONECKERPROD reduce production ident -> IDENT 
-- On INTDIV reduce production ident -> IDENT 
-- On HELP reduce production ident -> IDENT 
-- On GT reduce production ident -> IDENT 
-- On GE reduce production ident -> IDENT 
-- On EXP reduce production ident -> IDENT 
-- On EQEQ reduce production ident -> IDENT 
-- On EQASSIGN reduce production ident -> IDENT 
-- On DIV reduce production ident -> IDENT 
-- On COMMA reduce production ident -> IDENT 
-- On COLON reduce production ident -> IDENT 
-- On ATTRIBUTE reduce production ident -> IDENT 
-- On ANDVEC reduce production ident -> IDENT 
-- On AND reduce production ident -> IDENT 
** Conflict on EQASSIGN

State 102:
arg -> IDENT EQASSIGN . [ RPAREN RBRACKET COMMA ]
arg -> IDENT EQASSIGN . expr [ RPAREN RBRACKET COMMA ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 103
-- On RPAREN reduce production arg -> IDENT EQASSIGN 
-- On RBRACKET reduce production arg -> IDENT EQASSIGN 
-- On COMMA reduce production arg -> IDENT EQASSIGN 

State 103:
arg -> IDENT EQASSIGN expr . [ RPAREN RBRACKET COMMA ]
expr -> expr . PLUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On RPAREN reduce production arg -> IDENT EQASSIGN expr 
-- On RBRACKET reduce production arg -> IDENT EQASSIGN expr 
-- On COMMA reduce production arg -> IDENT EQASSIGN expr 

State 104:
arg -> expr . [ RPAREN RBRACKET COMMA ]
expr -> expr . PLUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE RSUPASSIGN RPAREN RBRACKET RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On RPAREN reduce production arg -> expr 
-- On RBRACKET reduce production arg -> expr 
-- On COMMA reduce production arg -> expr 

State 105:
expr -> expr LBRACKET LBRACKET args . RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On RBRACKET shift to state 106

State 106:
expr -> expr LBRACKET LBRACKET args RBRACKET . RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On RBRACKET shift to state 107

State 107:
expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On USEROP reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On TRUE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On TILDE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On SEMICOLON reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On RSUPASSIGN reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On RPAREN reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On REPEAT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On RBRACKET reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On RBRACE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On RASSIGN reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On PLUS reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On OUTERPROD reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On ORVEC reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On OR reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On NULL reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On NEXT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On NEQ reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On NA reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On MULT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On MODULUS reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On MINUS reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On MATRIXMULT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On LT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On LPAREN reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On LISTSUBSET reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On LE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On LBRACKET reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On LBRACE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On KRONECKERPROD reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On INTDIV reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On INT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On IF reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On IDENT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On HELP reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On GT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On GE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On FUNCTION reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On FOR reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On FLOAT reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On FALSE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On EXP reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On EQEQ reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On EOF reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On DIV reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On COMPLEX reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On COMMA reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On COLON reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On BREAK reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On BANG reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On ATTRIBUTE reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On ANDVEC reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 
-- On AND reduce production expr -> expr LBRACKET LBRACKET args RBRACKET RBRACKET 

State 108:
args -> arg . argstail [ RPAREN RBRACKET ]
-- On COMMA shift to state 109
-- On argstail shift to state 112
-- On RPAREN reduce production argstail -> 
-- On RBRACKET reduce production argstail -> 

State 109:
argstail -> COMMA . arg argstail [ RPAREN RBRACKET ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On STRING shift to state 39
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 51
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 101
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 104
-- On arg shift to state 110

State 110:
argstail -> COMMA arg . argstail [ RPAREN RBRACKET ]
-- On COMMA shift to state 109
-- On argstail shift to state 111
-- On RPAREN reduce production argstail -> 
-- On RBRACKET reduce production argstail -> 

State 111:
argstail -> COMMA arg argstail . [ RPAREN RBRACKET ]
-- On RPAREN reduce production argstail -> COMMA arg argstail 
-- On RBRACKET reduce production argstail -> COMMA arg argstail 

State 112:
args -> arg argstail . [ RPAREN RBRACKET ]
-- On RPAREN reduce production args -> arg argstail 
-- On RBRACKET reduce production args -> arg argstail 

State 113:
expr -> expr LBRACKET args . RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On RBRACKET shift to state 114

State 114:
expr -> expr LBRACKET args RBRACKET . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> expr LBRACKET args RBRACKET 
-- On USEROP reduce production expr -> expr LBRACKET args RBRACKET 
-- On TRUE reduce production expr -> expr LBRACKET args RBRACKET 
-- On TILDE reduce production expr -> expr LBRACKET args RBRACKET 
-- On SEMICOLON reduce production expr -> expr LBRACKET args RBRACKET 
-- On RSUPASSIGN reduce production expr -> expr LBRACKET args RBRACKET 
-- On RPAREN reduce production expr -> expr LBRACKET args RBRACKET 
-- On REPEAT reduce production expr -> expr LBRACKET args RBRACKET 
-- On RBRACKET reduce production expr -> expr LBRACKET args RBRACKET 
-- On RBRACE reduce production expr -> expr LBRACKET args RBRACKET 
-- On RASSIGN reduce production expr -> expr LBRACKET args RBRACKET 
-- On PLUS reduce production expr -> expr LBRACKET args RBRACKET 
-- On OUTERPROD reduce production expr -> expr LBRACKET args RBRACKET 
-- On ORVEC reduce production expr -> expr LBRACKET args RBRACKET 
-- On OR reduce production expr -> expr LBRACKET args RBRACKET 
-- On NULL reduce production expr -> expr LBRACKET args RBRACKET 
-- On NEXT reduce production expr -> expr LBRACKET args RBRACKET 
-- On NEQ reduce production expr -> expr LBRACKET args RBRACKET 
-- On NA reduce production expr -> expr LBRACKET args RBRACKET 
-- On MULT reduce production expr -> expr LBRACKET args RBRACKET 
-- On MODULUS reduce production expr -> expr LBRACKET args RBRACKET 
-- On MINUS reduce production expr -> expr LBRACKET args RBRACKET 
-- On MATRIXMULT reduce production expr -> expr LBRACKET args RBRACKET 
-- On LT reduce production expr -> expr LBRACKET args RBRACKET 
-- On LPAREN reduce production expr -> expr LBRACKET args RBRACKET 
-- On LISTSUBSET reduce production expr -> expr LBRACKET args RBRACKET 
-- On LE reduce production expr -> expr LBRACKET args RBRACKET 
-- On LBRACKET reduce production expr -> expr LBRACKET args RBRACKET 
-- On LBRACE reduce production expr -> expr LBRACKET args RBRACKET 
-- On KRONECKERPROD reduce production expr -> expr LBRACKET args RBRACKET 
-- On INTDIV reduce production expr -> expr LBRACKET args RBRACKET 
-- On INT reduce production expr -> expr LBRACKET args RBRACKET 
-- On IF reduce production expr -> expr LBRACKET args RBRACKET 
-- On IDENT reduce production expr -> expr LBRACKET args RBRACKET 
-- On HELP reduce production expr -> expr LBRACKET args RBRACKET 
-- On GT reduce production expr -> expr LBRACKET args RBRACKET 
-- On GE reduce production expr -> expr LBRACKET args RBRACKET 
-- On FUNCTION reduce production expr -> expr LBRACKET args RBRACKET 
-- On FOR reduce production expr -> expr LBRACKET args RBRACKET 
-- On FLOAT reduce production expr -> expr LBRACKET args RBRACKET 
-- On FALSE reduce production expr -> expr LBRACKET args RBRACKET 
-- On EXP reduce production expr -> expr LBRACKET args RBRACKET 
-- On EQEQ reduce production expr -> expr LBRACKET args RBRACKET 
-- On EOF reduce production expr -> expr LBRACKET args RBRACKET 
-- On DIV reduce production expr -> expr LBRACKET args RBRACKET 
-- On COMPLEX reduce production expr -> expr LBRACKET args RBRACKET 
-- On COMMA reduce production expr -> expr LBRACKET args RBRACKET 
-- On COLON reduce production expr -> expr LBRACKET args RBRACKET 
-- On BREAK reduce production expr -> expr LBRACKET args RBRACKET 
-- On BANG reduce production expr -> expr LBRACKET args RBRACKET 
-- On ATTRIBUTE reduce production expr -> expr LBRACKET args RBRACKET 
-- On ANDVEC reduce production expr -> expr LBRACKET args RBRACKET 
-- On AND reduce production expr -> expr LBRACKET args RBRACKET 

State 115:
expr -> expr LPAREN args . RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On RPAREN shift to state 116

State 116:
expr -> expr LPAREN args RPAREN . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> expr LPAREN args RPAREN 
-- On USEROP reduce production expr -> expr LPAREN args RPAREN 
-- On TRUE reduce production expr -> expr LPAREN args RPAREN 
-- On TILDE reduce production expr -> expr LPAREN args RPAREN 
-- On SEMICOLON reduce production expr -> expr LPAREN args RPAREN 
-- On RSUPASSIGN reduce production expr -> expr LPAREN args RPAREN 
-- On RPAREN reduce production expr -> expr LPAREN args RPAREN 
-- On REPEAT reduce production expr -> expr LPAREN args RPAREN 
-- On RBRACKET reduce production expr -> expr LPAREN args RPAREN 
-- On RBRACE reduce production expr -> expr LPAREN args RPAREN 
-- On RASSIGN reduce production expr -> expr LPAREN args RPAREN 
-- On PLUS reduce production expr -> expr LPAREN args RPAREN 
-- On OUTERPROD reduce production expr -> expr LPAREN args RPAREN 
-- On ORVEC reduce production expr -> expr LPAREN args RPAREN 
-- On OR reduce production expr -> expr LPAREN args RPAREN 
-- On NULL reduce production expr -> expr LPAREN args RPAREN 
-- On NEXT reduce production expr -> expr LPAREN args RPAREN 
-- On NEQ reduce production expr -> expr LPAREN args RPAREN 
-- On NA reduce production expr -> expr LPAREN args RPAREN 
-- On MULT reduce production expr -> expr LPAREN args RPAREN 
-- On MODULUS reduce production expr -> expr LPAREN args RPAREN 
-- On MINUS reduce production expr -> expr LPAREN args RPAREN 
-- On MATRIXMULT reduce production expr -> expr LPAREN args RPAREN 
-- On LT reduce production expr -> expr LPAREN args RPAREN 
-- On LPAREN reduce production expr -> expr LPAREN args RPAREN 
-- On LISTSUBSET reduce production expr -> expr LPAREN args RPAREN 
-- On LE reduce production expr -> expr LPAREN args RPAREN 
-- On LBRACKET reduce production expr -> expr LPAREN args RPAREN 
-- On LBRACE reduce production expr -> expr LPAREN args RPAREN 
-- On KRONECKERPROD reduce production expr -> expr LPAREN args RPAREN 
-- On INTDIV reduce production expr -> expr LPAREN args RPAREN 
-- On INT reduce production expr -> expr LPAREN args RPAREN 
-- On IF reduce production expr -> expr LPAREN args RPAREN 
-- On IDENT reduce production expr -> expr LPAREN args RPAREN 
-- On HELP reduce production expr -> expr LPAREN args RPAREN 
-- On GT reduce production expr -> expr LPAREN args RPAREN 
-- On GE reduce production expr -> expr LPAREN args RPAREN 
-- On FUNCTION reduce production expr -> expr LPAREN args RPAREN 
-- On FOR reduce production expr -> expr LPAREN args RPAREN 
-- On FLOAT reduce production expr -> expr LPAREN args RPAREN 
-- On FALSE reduce production expr -> expr LPAREN args RPAREN 
-- On EXP reduce production expr -> expr LPAREN args RPAREN 
-- On EQEQ reduce production expr -> expr LPAREN args RPAREN 
-- On EOF reduce production expr -> expr LPAREN args RPAREN 
-- On DIV reduce production expr -> expr LPAREN args RPAREN 
-- On COMPLEX reduce production expr -> expr LPAREN args RPAREN 
-- On COMMA reduce production expr -> expr LPAREN args RPAREN 
-- On COLON reduce production expr -> expr LPAREN args RPAREN 
-- On BREAK reduce production expr -> expr LPAREN args RPAREN 
-- On BANG reduce production expr -> expr LPAREN args RPAREN 
-- On ATTRIBUTE reduce production expr -> expr LPAREN args RPAREN 
-- On ANDVEC reduce production expr -> expr LPAREN args RPAREN 
-- On AND reduce production expr -> expr LPAREN args RPAREN 

State 117:
expr -> ident LASSIGN . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 118

State 118:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> ident LASSIGN expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> ident LASSIGN expr 
-- On TRUE reduce production expr -> ident LASSIGN expr 
-- On SEMICOLON reduce production expr -> ident LASSIGN expr 
-- On RPAREN reduce production expr -> ident LASSIGN expr 
-- On REPEAT reduce production expr -> ident LASSIGN expr 
-- On RBRACKET reduce production expr -> ident LASSIGN expr 
-- On RBRACE reduce production expr -> ident LASSIGN expr 
-- On NULL reduce production expr -> ident LASSIGN expr 
-- On NEXT reduce production expr -> ident LASSIGN expr 
-- On NA reduce production expr -> ident LASSIGN expr 
-- On LBRACE reduce production expr -> ident LASSIGN expr 
-- On INT reduce production expr -> ident LASSIGN expr 
-- On IF reduce production expr -> ident LASSIGN expr 
-- On IDENT reduce production expr -> ident LASSIGN expr 
-- On HELP reduce production expr -> ident LASSIGN expr 
-- On FUNCTION reduce production expr -> ident LASSIGN expr 
-- On FOR reduce production expr -> ident LASSIGN expr 
-- On FLOAT reduce production expr -> ident LASSIGN expr 
-- On FALSE reduce production expr -> ident LASSIGN expr 
-- On EOF reduce production expr -> ident LASSIGN expr 
-- On COMPLEX reduce production expr -> ident LASSIGN expr 
-- On COMMA reduce production expr -> ident LASSIGN expr 
-- On BREAK reduce production expr -> ident LASSIGN expr 
-- On BANG reduce production expr -> ident LASSIGN expr 

State 119:
expr -> ident EQASSIGN . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 120

State 120:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> ident EQASSIGN expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> ident EQASSIGN expr 
-- On TRUE reduce production expr -> ident EQASSIGN expr 
-- On SEMICOLON reduce production expr -> ident EQASSIGN expr 
-- On RPAREN reduce production expr -> ident EQASSIGN expr 
-- On REPEAT reduce production expr -> ident EQASSIGN expr 
-- On RBRACKET reduce production expr -> ident EQASSIGN expr 
-- On RBRACE reduce production expr -> ident EQASSIGN expr 
-- On NULL reduce production expr -> ident EQASSIGN expr 
-- On NEXT reduce production expr -> ident EQASSIGN expr 
-- On NA reduce production expr -> ident EQASSIGN expr 
-- On LBRACE reduce production expr -> ident EQASSIGN expr 
-- On INT reduce production expr -> ident EQASSIGN expr 
-- On IF reduce production expr -> ident EQASSIGN expr 
-- On IDENT reduce production expr -> ident EQASSIGN expr 
-- On HELP reduce production expr -> ident EQASSIGN expr 
-- On FUNCTION reduce production expr -> ident EQASSIGN expr 
-- On FOR reduce production expr -> ident EQASSIGN expr 
-- On FLOAT reduce production expr -> ident EQASSIGN expr 
-- On FALSE reduce production expr -> ident EQASSIGN expr 
-- On EOF reduce production expr -> ident EQASSIGN expr 
-- On COMPLEX reduce production expr -> ident EQASSIGN expr 
-- On COMMA reduce production expr -> ident EQASSIGN expr 
-- On BREAK reduce production expr -> ident EQASSIGN expr 
-- On BANG reduce production expr -> ident EQASSIGN expr 

State 121:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> BANG expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> BANG expr 
-- On TRUE reduce production expr -> BANG expr 
-- On TILDE reduce production expr -> BANG expr 
-- On SEMICOLON reduce production expr -> BANG expr 
-- On RSUPASSIGN reduce production expr -> BANG expr 
-- On RPAREN reduce production expr -> BANG expr 
-- On REPEAT reduce production expr -> BANG expr 
-- On RBRACKET reduce production expr -> BANG expr 
-- On RBRACE reduce production expr -> BANG expr 
-- On RASSIGN reduce production expr -> BANG expr 
-- On ORVEC reduce production expr -> BANG expr 
-- On OR reduce production expr -> BANG expr 
-- On NULL reduce production expr -> BANG expr 
-- On NEXT reduce production expr -> BANG expr 
-- On NA reduce production expr -> BANG expr 
-- On LBRACE reduce production expr -> BANG expr 
-- On INT reduce production expr -> BANG expr 
-- On IF reduce production expr -> BANG expr 
-- On IDENT reduce production expr -> BANG expr 
-- On HELP reduce production expr -> BANG expr 
-- On FUNCTION reduce production expr -> BANG expr 
-- On FOR reduce production expr -> BANG expr 
-- On FLOAT reduce production expr -> BANG expr 
-- On FALSE reduce production expr -> BANG expr 
-- On EOF reduce production expr -> BANG expr 
-- On COMPLEX reduce production expr -> BANG expr 
-- On COMMA reduce production expr -> BANG expr 
-- On BREAK reduce production expr -> BANG expr 
-- On BANG reduce production expr -> BANG expr 
-- On ANDVEC reduce production expr -> BANG expr 
-- On AND reduce production expr -> BANG expr 

State 122:
expr -> expr . PLUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> FOR LPAREN ident IN expr . RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RPAREN shift to state 123
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94

State 123:
expr -> FOR LPAREN ident IN expr RPAREN . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 124

State 124:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> FOR LPAREN ident IN expr RPAREN expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On USEROP reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On TRUE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On TILDE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On SEMICOLON reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On RSUPASSIGN reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On RPAREN reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On REPEAT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On RBRACKET reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On RBRACE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On RASSIGN reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On PLUS reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On OUTERPROD reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On ORVEC reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On OR reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On NULL reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On NEXT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On NEQ reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On NA reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On MULT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On MODULUS reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On MINUS reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On MATRIXMULT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On LT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On LPAREN reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On LISTSUBSET reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On LE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On LBRACKET reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On LBRACE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On KRONECKERPROD reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On INTDIV reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On INT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On IF reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On IDENT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On HELP reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On GT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On GE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On FUNCTION reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On FOR reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On FLOAT reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On FALSE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On EXP reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On EQEQ reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On EOF reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On DIV reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On COMPLEX reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On COMMA reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On COLON reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On BREAK reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On BANG reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On ATTRIBUTE reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On ANDVEC reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
-- On AND reduce production expr -> FOR LPAREN ident IN expr RPAREN expr 
** Conflict on USEROP TILDE RSUPASSIGN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND

State 125:
expr -> expr . PLUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COMMA COLON ATTRIBUTE ANDVEC AND ]
param -> IDENT EQASSIGN expr . [ RPAREN COMMA ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On RPAREN reduce production param -> IDENT EQASSIGN expr 
-- On COMMA reduce production param -> IDENT EQASSIGN expr 

State 126:
param -> DOT3 . [ RPAREN COMMA ]
-- On RPAREN reduce production param -> DOT3 
-- On COMMA reduce production param -> DOT3 

State 127:
expr -> FUNCTION LPAREN params . RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On RPAREN shift to state 128

State 128:
expr -> FUNCTION LPAREN params RPAREN . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 129

State 129:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> FUNCTION LPAREN params RPAREN expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On USEROP reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On TRUE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On TILDE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On SEMICOLON reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On RSUPASSIGN reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On RPAREN reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On REPEAT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On RBRACKET reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On RBRACE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On RASSIGN reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On PLUS reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On OUTERPROD reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On ORVEC reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On OR reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On NULL reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On NEXT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On NEQ reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On NA reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On MULT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On MODULUS reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On MINUS reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On MATRIXMULT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On LT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On LPAREN reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On LISTSUBSET reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On LE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On LBRACKET reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On LBRACE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On KRONECKERPROD reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On INTDIV reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On INT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On IF reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On IDENT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On HELP reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On GT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On GE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On FUNCTION reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On FOR reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On FLOAT reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On FALSE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On EXP reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On EQEQ reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On EOF reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On DIV reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On COMPLEX reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On COMMA reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On COLON reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On BREAK reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On BANG reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On ATTRIBUTE reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On ANDVEC reduce production expr -> FUNCTION LPAREN params RPAREN expr 
-- On AND reduce production expr -> FUNCTION LPAREN params RPAREN expr 
** Conflict on USEROP TILDE RSUPASSIGN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND

State 130:
params -> param . paramstail [ RPAREN ]
-- On COMMA shift to state 131
-- On paramstail shift to state 134
-- On RPAREN reduce production paramstail -> 

State 131:
paramstail -> COMMA . param paramstail [ RPAREN ]
-- On IDENT shift to state 22
-- On DOT3 shift to state 126
-- On param shift to state 132

State 132:
paramstail -> COMMA param . paramstail [ RPAREN ]
-- On COMMA shift to state 131
-- On paramstail shift to state 133
-- On RPAREN reduce production paramstail -> 

State 133:
paramstail -> COMMA param paramstail . [ RPAREN ]
-- On RPAREN reduce production paramstail -> COMMA param paramstail 

State 134:
params -> param paramstail . [ RPAREN ]
-- On RPAREN reduce production params -> param paramstail 

State 135:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> HELP expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> HELP expr 
-- On TRUE reduce production expr -> HELP expr 
-- On SEMICOLON reduce production expr -> HELP expr 
-- On RPAREN reduce production expr -> HELP expr 
-- On REPEAT reduce production expr -> HELP expr 
-- On RBRACKET reduce production expr -> HELP expr 
-- On RBRACE reduce production expr -> HELP expr 
-- On NULL reduce production expr -> HELP expr 
-- On NEXT reduce production expr -> HELP expr 
-- On NA reduce production expr -> HELP expr 
-- On LBRACE reduce production expr -> HELP expr 
-- On INT reduce production expr -> HELP expr 
-- On IF reduce production expr -> HELP expr 
-- On IDENT reduce production expr -> HELP expr 
-- On HELP reduce production expr -> HELP expr 
-- On FUNCTION reduce production expr -> HELP expr 
-- On FOR reduce production expr -> HELP expr 
-- On FLOAT reduce production expr -> HELP expr 
-- On FALSE reduce production expr -> HELP expr 
-- On EOF reduce production expr -> HELP expr 
-- On COMPLEX reduce production expr -> HELP expr 
-- On COMMA reduce production expr -> HELP expr 
-- On BREAK reduce production expr -> HELP expr 
-- On BANG reduce production expr -> HELP expr 

State 136:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> IF expr . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> IF expr . expr expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On USEROP shift to state 36
-- On TRUE shift to state 3
-- On TILDE shift to state 137
-- On RSUPASSIGN shift to state 54
-- On REPEAT shift to state 5
-- On RASSIGN shift to state 56
-- On PLUS shift to state 139
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NEQ shift to state 60
-- On NA shift to state 9
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 141
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 11
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 143
-- On GT shift to state 86
-- On GE shift to state 88
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COMPLEX shift to state 30
-- On COLON shift to state 70
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On ident shift to state 33
-- On expr shift to state 145

State 137:
expr -> expr TILDE . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> TILDE . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 138

State 138:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr TILDE expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> TILDE expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr TILDE expr 
-- On WHILE reduce production expr -> TILDE expr 
-- On TRUE reduce production expr -> expr TILDE expr 
-- On TRUE reduce production expr -> TILDE expr 
-- On TILDE reduce production expr -> expr TILDE expr 
-- On TILDE reduce production expr -> TILDE expr 
-- On SEMICOLON reduce production expr -> expr TILDE expr 
-- On SEMICOLON reduce production expr -> TILDE expr 
-- On RSUPASSIGN reduce production expr -> expr TILDE expr 
-- On RSUPASSIGN reduce production expr -> TILDE expr 
-- On RPAREN reduce production expr -> expr TILDE expr 
-- On RPAREN reduce production expr -> TILDE expr 
-- On REPEAT reduce production expr -> expr TILDE expr 
-- On REPEAT reduce production expr -> TILDE expr 
-- On RBRACKET reduce production expr -> expr TILDE expr 
-- On RBRACKET reduce production expr -> TILDE expr 
-- On RBRACE reduce production expr -> expr TILDE expr 
-- On RBRACE reduce production expr -> TILDE expr 
-- On RASSIGN reduce production expr -> expr TILDE expr 
-- On RASSIGN reduce production expr -> TILDE expr 
-- On NULL reduce production expr -> expr TILDE expr 
-- On NULL reduce production expr -> TILDE expr 
-- On NEXT reduce production expr -> expr TILDE expr 
-- On NEXT reduce production expr -> TILDE expr 
-- On NA reduce production expr -> expr TILDE expr 
-- On NA reduce production expr -> TILDE expr 
-- On LBRACE reduce production expr -> expr TILDE expr 
-- On LBRACE reduce production expr -> TILDE expr 
-- On INT reduce production expr -> expr TILDE expr 
-- On INT reduce production expr -> TILDE expr 
-- On IF reduce production expr -> expr TILDE expr 
-- On IF reduce production expr -> TILDE expr 
-- On IDENT reduce production expr -> expr TILDE expr 
-- On IDENT reduce production expr -> TILDE expr 
-- On HELP reduce production expr -> expr TILDE expr 
-- On HELP reduce production expr -> TILDE expr 
-- On FUNCTION reduce production expr -> expr TILDE expr 
-- On FUNCTION reduce production expr -> TILDE expr 
-- On FOR reduce production expr -> expr TILDE expr 
-- On FOR reduce production expr -> TILDE expr 
-- On FLOAT reduce production expr -> expr TILDE expr 
-- On FLOAT reduce production expr -> TILDE expr 
-- On FALSE reduce production expr -> expr TILDE expr 
-- On FALSE reduce production expr -> TILDE expr 
-- On EOF reduce production expr -> expr TILDE expr 
-- On EOF reduce production expr -> TILDE expr 
-- On COMPLEX reduce production expr -> expr TILDE expr 
-- On COMPLEX reduce production expr -> TILDE expr 
-- On COMMA reduce production expr -> expr TILDE expr 
-- On COMMA reduce production expr -> TILDE expr 
-- On BREAK reduce production expr -> expr TILDE expr 
-- On BREAK reduce production expr -> TILDE expr 
-- On BANG reduce production expr -> expr TILDE expr 
-- On BANG reduce production expr -> TILDE expr 
** Conflict on WHILE TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN NULL NEXT NA LBRACE INT IF IDENT HELP FUNCTION FOR FLOAT FALSE EOF COMPLEX COMMA BREAK BANG

State 139:
expr -> expr PLUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> PLUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 140

State 140:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr PLUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> PLUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr PLUS expr 
-- On WHILE reduce production expr -> PLUS expr 
-- On USEROP reduce production expr -> expr PLUS expr 
-- On USEROP reduce production expr -> PLUS expr 
-- On TRUE reduce production expr -> expr PLUS expr 
-- On TRUE reduce production expr -> PLUS expr 
-- On TILDE reduce production expr -> expr PLUS expr 
-- On TILDE reduce production expr -> PLUS expr 
-- On SEMICOLON reduce production expr -> expr PLUS expr 
-- On SEMICOLON reduce production expr -> PLUS expr 
-- On RSUPASSIGN reduce production expr -> expr PLUS expr 
-- On RSUPASSIGN reduce production expr -> PLUS expr 
-- On RPAREN reduce production expr -> expr PLUS expr 
-- On RPAREN reduce production expr -> PLUS expr 
-- On REPEAT reduce production expr -> expr PLUS expr 
-- On REPEAT reduce production expr -> PLUS expr 
-- On RBRACKET reduce production expr -> expr PLUS expr 
-- On RBRACKET reduce production expr -> PLUS expr 
-- On RBRACE reduce production expr -> expr PLUS expr 
-- On RBRACE reduce production expr -> PLUS expr 
-- On RASSIGN reduce production expr -> expr PLUS expr 
-- On RASSIGN reduce production expr -> PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> PLUS expr 
-- On OUTERPROD reduce production expr -> expr PLUS expr 
-- On OUTERPROD reduce production expr -> PLUS expr 
-- On ORVEC reduce production expr -> expr PLUS expr 
-- On ORVEC reduce production expr -> PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> PLUS expr 
-- On NULL reduce production expr -> expr PLUS expr 
-- On NULL reduce production expr -> PLUS expr 
-- On NEXT reduce production expr -> expr PLUS expr 
-- On NEXT reduce production expr -> PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> PLUS expr 
-- On NA reduce production expr -> expr PLUS expr 
-- On NA reduce production expr -> PLUS expr 
-- On MULT reduce production expr -> expr PLUS expr 
-- On MULT reduce production expr -> PLUS expr 
-- On MODULUS reduce production expr -> expr PLUS expr 
-- On MODULUS reduce production expr -> PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> PLUS expr 
-- On MATRIXMULT reduce production expr -> expr PLUS expr 
-- On MATRIXMULT reduce production expr -> PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> PLUS expr 
-- On LE reduce production expr -> expr PLUS expr 
-- On LE reduce production expr -> PLUS expr 
-- On LBRACE reduce production expr -> expr PLUS expr 
-- On LBRACE reduce production expr -> PLUS expr 
-- On KRONECKERPROD reduce production expr -> expr PLUS expr 
-- On KRONECKERPROD reduce production expr -> PLUS expr 
-- On INTDIV reduce production expr -> expr PLUS expr 
-- On INTDIV reduce production expr -> PLUS expr 
-- On INT reduce production expr -> expr PLUS expr 
-- On INT reduce production expr -> PLUS expr 
-- On IF reduce production expr -> expr PLUS expr 
-- On IF reduce production expr -> PLUS expr 
-- On IDENT reduce production expr -> expr PLUS expr 
-- On IDENT reduce production expr -> PLUS expr 
-- On HELP reduce production expr -> expr PLUS expr 
-- On HELP reduce production expr -> PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> PLUS expr 
-- On GE reduce production expr -> expr PLUS expr 
-- On GE reduce production expr -> PLUS expr 
-- On FUNCTION reduce production expr -> expr PLUS expr 
-- On FUNCTION reduce production expr -> PLUS expr 
-- On FOR reduce production expr -> expr PLUS expr 
-- On FOR reduce production expr -> PLUS expr 
-- On FLOAT reduce production expr -> expr PLUS expr 
-- On FLOAT reduce production expr -> PLUS expr 
-- On FALSE reduce production expr -> expr PLUS expr 
-- On FALSE reduce production expr -> PLUS expr 
-- On EQEQ reduce production expr -> expr PLUS expr 
-- On EQEQ reduce production expr -> PLUS expr 
-- On EOF reduce production expr -> expr PLUS expr 
-- On EOF reduce production expr -> PLUS expr 
-- On DIV reduce production expr -> expr PLUS expr 
-- On DIV reduce production expr -> PLUS expr 
-- On COMPLEX reduce production expr -> expr PLUS expr 
-- On COMPLEX reduce production expr -> PLUS expr 
-- On COMMA reduce production expr -> expr PLUS expr 
-- On COMMA reduce production expr -> PLUS expr 
-- On COLON reduce production expr -> expr PLUS expr 
-- On COLON reduce production expr -> PLUS expr 
-- On BREAK reduce production expr -> expr PLUS expr 
-- On BREAK reduce production expr -> PLUS expr 
-- On BANG reduce production expr -> expr PLUS expr 
-- On BANG reduce production expr -> PLUS expr 
-- On ANDVEC reduce production expr -> expr PLUS expr 
-- On ANDVEC reduce production expr -> PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> PLUS expr 
** Conflict on WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LE LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ANDVEC AND

State 141:
expr -> expr MINUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> MINUS . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 142

State 142:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr MINUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> MINUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr MINUS expr 
-- On WHILE reduce production expr -> MINUS expr 
-- On USEROP reduce production expr -> expr MINUS expr 
-- On USEROP reduce production expr -> MINUS expr 
-- On TRUE reduce production expr -> expr MINUS expr 
-- On TRUE reduce production expr -> MINUS expr 
-- On TILDE reduce production expr -> expr MINUS expr 
-- On TILDE reduce production expr -> MINUS expr 
-- On SEMICOLON reduce production expr -> expr MINUS expr 
-- On SEMICOLON reduce production expr -> MINUS expr 
-- On RSUPASSIGN reduce production expr -> expr MINUS expr 
-- On RSUPASSIGN reduce production expr -> MINUS expr 
-- On RPAREN reduce production expr -> expr MINUS expr 
-- On RPAREN reduce production expr -> MINUS expr 
-- On REPEAT reduce production expr -> expr MINUS expr 
-- On REPEAT reduce production expr -> MINUS expr 
-- On RBRACKET reduce production expr -> expr MINUS expr 
-- On RBRACKET reduce production expr -> MINUS expr 
-- On RBRACE reduce production expr -> expr MINUS expr 
-- On RBRACE reduce production expr -> MINUS expr 
-- On RASSIGN reduce production expr -> expr MINUS expr 
-- On RASSIGN reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On OUTERPROD reduce production expr -> expr MINUS expr 
-- On OUTERPROD reduce production expr -> MINUS expr 
-- On ORVEC reduce production expr -> expr MINUS expr 
-- On ORVEC reduce production expr -> MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> MINUS expr 
-- On NULL reduce production expr -> expr MINUS expr 
-- On NULL reduce production expr -> MINUS expr 
-- On NEXT reduce production expr -> expr MINUS expr 
-- On NEXT reduce production expr -> MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> MINUS expr 
-- On NA reduce production expr -> expr MINUS expr 
-- On NA reduce production expr -> MINUS expr 
-- On MULT reduce production expr -> expr MINUS expr 
-- On MULT reduce production expr -> MINUS expr 
-- On MODULUS reduce production expr -> expr MINUS expr 
-- On MODULUS reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On MATRIXMULT reduce production expr -> expr MINUS expr 
-- On MATRIXMULT reduce production expr -> MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> MINUS expr 
-- On LE reduce production expr -> expr MINUS expr 
-- On LE reduce production expr -> MINUS expr 
-- On LBRACE reduce production expr -> expr MINUS expr 
-- On LBRACE reduce production expr -> MINUS expr 
-- On KRONECKERPROD reduce production expr -> expr MINUS expr 
-- On KRONECKERPROD reduce production expr -> MINUS expr 
-- On INTDIV reduce production expr -> expr MINUS expr 
-- On INTDIV reduce production expr -> MINUS expr 
-- On INT reduce production expr -> expr MINUS expr 
-- On INT reduce production expr -> MINUS expr 
-- On IF reduce production expr -> expr MINUS expr 
-- On IF reduce production expr -> MINUS expr 
-- On IDENT reduce production expr -> expr MINUS expr 
-- On IDENT reduce production expr -> MINUS expr 
-- On HELP reduce production expr -> expr MINUS expr 
-- On HELP reduce production expr -> MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> MINUS expr 
-- On GE reduce production expr -> expr MINUS expr 
-- On GE reduce production expr -> MINUS expr 
-- On FUNCTION reduce production expr -> expr MINUS expr 
-- On FUNCTION reduce production expr -> MINUS expr 
-- On FOR reduce production expr -> expr MINUS expr 
-- On FOR reduce production expr -> MINUS expr 
-- On FLOAT reduce production expr -> expr MINUS expr 
-- On FLOAT reduce production expr -> MINUS expr 
-- On FALSE reduce production expr -> expr MINUS expr 
-- On FALSE reduce production expr -> MINUS expr 
-- On EQEQ reduce production expr -> expr MINUS expr 
-- On EQEQ reduce production expr -> MINUS expr 
-- On EOF reduce production expr -> expr MINUS expr 
-- On EOF reduce production expr -> MINUS expr 
-- On DIV reduce production expr -> expr MINUS expr 
-- On DIV reduce production expr -> MINUS expr 
-- On COMPLEX reduce production expr -> expr MINUS expr 
-- On COMPLEX reduce production expr -> MINUS expr 
-- On COMMA reduce production expr -> expr MINUS expr 
-- On COMMA reduce production expr -> MINUS expr 
-- On COLON reduce production expr -> expr MINUS expr 
-- On COLON reduce production expr -> MINUS expr 
-- On BREAK reduce production expr -> expr MINUS expr 
-- On BREAK reduce production expr -> MINUS expr 
-- On BANG reduce production expr -> expr MINUS expr 
-- On BANG reduce production expr -> MINUS expr 
-- On ANDVEC reduce production expr -> expr MINUS expr 
-- On ANDVEC reduce production expr -> MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> MINUS expr 
** Conflict on WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LE LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ANDVEC AND

State 143:
expr -> expr HELP . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> HELP . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 144

State 144:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr HELP expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> HELP expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> expr HELP expr 
-- On WHILE reduce production expr -> HELP expr 
-- On TRUE reduce production expr -> expr HELP expr 
-- On TRUE reduce production expr -> HELP expr 
-- On SEMICOLON reduce production expr -> expr HELP expr 
-- On SEMICOLON reduce production expr -> HELP expr 
-- On RPAREN reduce production expr -> expr HELP expr 
-- On RPAREN reduce production expr -> HELP expr 
-- On REPEAT reduce production expr -> expr HELP expr 
-- On REPEAT reduce production expr -> HELP expr 
-- On RBRACKET reduce production expr -> expr HELP expr 
-- On RBRACKET reduce production expr -> HELP expr 
-- On RBRACE reduce production expr -> expr HELP expr 
-- On RBRACE reduce production expr -> HELP expr 
-- On NULL reduce production expr -> expr HELP expr 
-- On NULL reduce production expr -> HELP expr 
-- On NEXT reduce production expr -> expr HELP expr 
-- On NEXT reduce production expr -> HELP expr 
-- On NA reduce production expr -> expr HELP expr 
-- On NA reduce production expr -> HELP expr 
-- On LBRACE reduce production expr -> expr HELP expr 
-- On LBRACE reduce production expr -> HELP expr 
-- On INT reduce production expr -> expr HELP expr 
-- On INT reduce production expr -> HELP expr 
-- On IF reduce production expr -> expr HELP expr 
-- On IF reduce production expr -> HELP expr 
-- On IDENT reduce production expr -> expr HELP expr 
-- On IDENT reduce production expr -> HELP expr 
-- On HELP reduce production expr -> expr HELP expr 
-- On HELP reduce production expr -> HELP expr 
-- On FUNCTION reduce production expr -> expr HELP expr 
-- On FUNCTION reduce production expr -> HELP expr 
-- On FOR reduce production expr -> expr HELP expr 
-- On FOR reduce production expr -> HELP expr 
-- On FLOAT reduce production expr -> expr HELP expr 
-- On FLOAT reduce production expr -> HELP expr 
-- On FALSE reduce production expr -> expr HELP expr 
-- On FALSE reduce production expr -> HELP expr 
-- On EOF reduce production expr -> expr HELP expr 
-- On EOF reduce production expr -> HELP expr 
-- On COMPLEX reduce production expr -> expr HELP expr 
-- On COMPLEX reduce production expr -> HELP expr 
-- On COMMA reduce production expr -> expr HELP expr 
-- On COMMA reduce production expr -> HELP expr 
-- On BREAK reduce production expr -> expr HELP expr 
-- On BREAK reduce production expr -> HELP expr 
-- On BANG reduce production expr -> expr HELP expr 
-- On BANG reduce production expr -> HELP expr 
** Conflict on WHILE TRUE SEMICOLON RPAREN REPEAT RBRACKET RBRACE NULL NEXT NA LBRACE INT IF IDENT HELP FUNCTION FOR FLOAT FALSE EOF COMPLEX COMMA BREAK BANG

State 145:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> IF expr expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> IF expr expr . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On USEROP shift to state 36
-- On TRUE shift to state 3
-- On TILDE shift to state 137
-- On RSUPASSIGN shift to state 54
-- On REPEAT shift to state 5
-- On RASSIGN shift to state 56
-- On PLUS shift to state 139
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NEQ shift to state 60
-- On NA shift to state 9
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 141
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 11
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 143
-- On GT shift to state 86
-- On GE shift to state 88
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COMPLEX shift to state 30
-- On COLON shift to state 70
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On ident shift to state 33
-- On expr shift to state 146
-- On WHILE reduce production expr -> IF expr expr 
-- On USEROP reduce production expr -> IF expr expr 
-- On TRUE reduce production expr -> IF expr expr 
-- On TILDE reduce production expr -> IF expr expr 
-- On SEMICOLON reduce production expr -> IF expr expr 
-- On RSUPASSIGN reduce production expr -> IF expr expr 
-- On RPAREN reduce production expr -> IF expr expr 
-- On REPEAT reduce production expr -> IF expr expr 
-- On RBRACKET reduce production expr -> IF expr expr 
-- On RBRACE reduce production expr -> IF expr expr 
-- On RASSIGN reduce production expr -> IF expr expr 
-- On PLUS reduce production expr -> IF expr expr 
-- On OUTERPROD reduce production expr -> IF expr expr 
-- On ORVEC reduce production expr -> IF expr expr 
-- On OR reduce production expr -> IF expr expr 
-- On NULL reduce production expr -> IF expr expr 
-- On NEXT reduce production expr -> IF expr expr 
-- On NEQ reduce production expr -> IF expr expr 
-- On NA reduce production expr -> IF expr expr 
-- On MULT reduce production expr -> IF expr expr 
-- On MODULUS reduce production expr -> IF expr expr 
-- On MINUS reduce production expr -> IF expr expr 
-- On MATRIXMULT reduce production expr -> IF expr expr 
-- On LT reduce production expr -> IF expr expr 
-- On LPAREN reduce production expr -> IF expr expr 
-- On LISTSUBSET reduce production expr -> IF expr expr 
-- On LE reduce production expr -> IF expr expr 
-- On LBRACKET reduce production expr -> IF expr expr 
-- On LBRACE reduce production expr -> IF expr expr 
-- On KRONECKERPROD reduce production expr -> IF expr expr 
-- On INTDIV reduce production expr -> IF expr expr 
-- On INT reduce production expr -> IF expr expr 
-- On IF reduce production expr -> IF expr expr 
-- On IDENT reduce production expr -> IF expr expr 
-- On HELP reduce production expr -> IF expr expr 
-- On GT reduce production expr -> IF expr expr 
-- On GE reduce production expr -> IF expr expr 
-- On FUNCTION reduce production expr -> IF expr expr 
-- On FOR reduce production expr -> IF expr expr 
-- On FLOAT reduce production expr -> IF expr expr 
-- On FALSE reduce production expr -> IF expr expr 
-- On EXP reduce production expr -> IF expr expr 
-- On EQEQ reduce production expr -> IF expr expr 
-- On EOF reduce production expr -> IF expr expr 
-- On DIV reduce production expr -> IF expr expr 
-- On COMPLEX reduce production expr -> IF expr expr 
-- On COMMA reduce production expr -> IF expr expr 
-- On COLON reduce production expr -> IF expr expr 
-- On BREAK reduce production expr -> IF expr expr 
-- On BANG reduce production expr -> IF expr expr 
-- On ATTRIBUTE reduce production expr -> IF expr expr 
-- On ANDVEC reduce production expr -> IF expr expr 
-- On AND reduce production expr -> IF expr expr 
** Conflict on WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND

State 146:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> IF expr expr expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> IF expr expr expr 
-- On USEROP reduce production expr -> IF expr expr expr 
-- On TRUE reduce production expr -> IF expr expr expr 
-- On TILDE reduce production expr -> IF expr expr expr 
-- On SEMICOLON reduce production expr -> IF expr expr expr 
-- On RSUPASSIGN reduce production expr -> IF expr expr expr 
-- On RPAREN reduce production expr -> IF expr expr expr 
-- On REPEAT reduce production expr -> IF expr expr expr 
-- On RBRACKET reduce production expr -> IF expr expr expr 
-- On RBRACE reduce production expr -> IF expr expr expr 
-- On RASSIGN reduce production expr -> IF expr expr expr 
-- On PLUS reduce production expr -> IF expr expr expr 
-- On OUTERPROD reduce production expr -> IF expr expr expr 
-- On ORVEC reduce production expr -> IF expr expr expr 
-- On OR reduce production expr -> IF expr expr expr 
-- On NULL reduce production expr -> IF expr expr expr 
-- On NEXT reduce production expr -> IF expr expr expr 
-- On NEQ reduce production expr -> IF expr expr expr 
-- On NA reduce production expr -> IF expr expr expr 
-- On MULT reduce production expr -> IF expr expr expr 
-- On MODULUS reduce production expr -> IF expr expr expr 
-- On MINUS reduce production expr -> IF expr expr expr 
-- On MATRIXMULT reduce production expr -> IF expr expr expr 
-- On LT reduce production expr -> IF expr expr expr 
-- On LPAREN reduce production expr -> IF expr expr expr 
-- On LISTSUBSET reduce production expr -> IF expr expr expr 
-- On LE reduce production expr -> IF expr expr expr 
-- On LBRACKET reduce production expr -> IF expr expr expr 
-- On LBRACE reduce production expr -> IF expr expr expr 
-- On KRONECKERPROD reduce production expr -> IF expr expr expr 
-- On INTDIV reduce production expr -> IF expr expr expr 
-- On INT reduce production expr -> IF expr expr expr 
-- On IF reduce production expr -> IF expr expr expr 
-- On IDENT reduce production expr -> IF expr expr expr 
-- On HELP reduce production expr -> IF expr expr expr 
-- On GT reduce production expr -> IF expr expr expr 
-- On GE reduce production expr -> IF expr expr expr 
-- On FUNCTION reduce production expr -> IF expr expr expr 
-- On FOR reduce production expr -> IF expr expr expr 
-- On FLOAT reduce production expr -> IF expr expr expr 
-- On FALSE reduce production expr -> IF expr expr expr 
-- On EXP reduce production expr -> IF expr expr expr 
-- On EQEQ reduce production expr -> IF expr expr expr 
-- On EOF reduce production expr -> IF expr expr expr 
-- On DIV reduce production expr -> IF expr expr expr 
-- On COMPLEX reduce production expr -> IF expr expr expr 
-- On COMMA reduce production expr -> IF expr expr expr 
-- On COLON reduce production expr -> IF expr expr expr 
-- On BREAK reduce production expr -> IF expr expr expr 
-- On BANG reduce production expr -> IF expr expr expr 
-- On ATTRIBUTE reduce production expr -> IF expr expr expr 
-- On ANDVEC reduce production expr -> IF expr expr expr 
-- On AND reduce production expr -> IF expr expr expr 
** Conflict on USEROP TILDE RSUPASSIGN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND

State 147:
expr -> LBRACE exprseq . RBRACE [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On RBRACE shift to state 148

State 148:
expr -> LBRACE exprseq RBRACE . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE reduce production expr -> LBRACE exprseq RBRACE 
-- On USEROP reduce production expr -> LBRACE exprseq RBRACE 
-- On TRUE reduce production expr -> LBRACE exprseq RBRACE 
-- On TILDE reduce production expr -> LBRACE exprseq RBRACE 
-- On SEMICOLON reduce production expr -> LBRACE exprseq RBRACE 
-- On RSUPASSIGN reduce production expr -> LBRACE exprseq RBRACE 
-- On RPAREN reduce production expr -> LBRACE exprseq RBRACE 
-- On REPEAT reduce production expr -> LBRACE exprseq RBRACE 
-- On RBRACKET reduce production expr -> LBRACE exprseq RBRACE 
-- On RBRACE reduce production expr -> LBRACE exprseq RBRACE 
-- On RASSIGN reduce production expr -> LBRACE exprseq RBRACE 
-- On PLUS reduce production expr -> LBRACE exprseq RBRACE 
-- On OUTERPROD reduce production expr -> LBRACE exprseq RBRACE 
-- On ORVEC reduce production expr -> LBRACE exprseq RBRACE 
-- On OR reduce production expr -> LBRACE exprseq RBRACE 
-- On NULL reduce production expr -> LBRACE exprseq RBRACE 
-- On NEXT reduce production expr -> LBRACE exprseq RBRACE 
-- On NEQ reduce production expr -> LBRACE exprseq RBRACE 
-- On NA reduce production expr -> LBRACE exprseq RBRACE 
-- On MULT reduce production expr -> LBRACE exprseq RBRACE 
-- On MODULUS reduce production expr -> LBRACE exprseq RBRACE 
-- On MINUS reduce production expr -> LBRACE exprseq RBRACE 
-- On MATRIXMULT reduce production expr -> LBRACE exprseq RBRACE 
-- On LT reduce production expr -> LBRACE exprseq RBRACE 
-- On LPAREN reduce production expr -> LBRACE exprseq RBRACE 
-- On LISTSUBSET reduce production expr -> LBRACE exprseq RBRACE 
-- On LE reduce production expr -> LBRACE exprseq RBRACE 
-- On LBRACKET reduce production expr -> LBRACE exprseq RBRACE 
-- On LBRACE reduce production expr -> LBRACE exprseq RBRACE 
-- On KRONECKERPROD reduce production expr -> LBRACE exprseq RBRACE 
-- On INTDIV reduce production expr -> LBRACE exprseq RBRACE 
-- On INT reduce production expr -> LBRACE exprseq RBRACE 
-- On IF reduce production expr -> LBRACE exprseq RBRACE 
-- On IDENT reduce production expr -> LBRACE exprseq RBRACE 
-- On HELP reduce production expr -> LBRACE exprseq RBRACE 
-- On GT reduce production expr -> LBRACE exprseq RBRACE 
-- On GE reduce production expr -> LBRACE exprseq RBRACE 
-- On FUNCTION reduce production expr -> LBRACE exprseq RBRACE 
-- On FOR reduce production expr -> LBRACE exprseq RBRACE 
-- On FLOAT reduce production expr -> LBRACE exprseq RBRACE 
-- On FALSE reduce production expr -> LBRACE exprseq RBRACE 
-- On EXP reduce production expr -> LBRACE exprseq RBRACE 
-- On EQEQ reduce production expr -> LBRACE exprseq RBRACE 
-- On EOF reduce production expr -> LBRACE exprseq RBRACE 
-- On DIV reduce production expr -> LBRACE exprseq RBRACE 
-- On COMPLEX reduce production expr -> LBRACE exprseq RBRACE 
-- On COMMA reduce production expr -> LBRACE exprseq RBRACE 
-- On COLON reduce production expr -> LBRACE exprseq RBRACE 
-- On BREAK reduce production expr -> LBRACE exprseq RBRACE 
-- On BANG reduce production expr -> LBRACE exprseq RBRACE 
-- On ATTRIBUTE reduce production expr -> LBRACE exprseq RBRACE 
-- On ANDVEC reduce production expr -> LBRACE exprseq RBRACE 
-- On AND reduce production expr -> LBRACE exprseq RBRACE 

State 149:
expr -> expr . PLUS expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
exprseq -> expr . exprseqtail [ RBRACE ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On SEMICOLON shift to state 150
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On exprseqtail shift to state 153
-- On RBRACE reduce production exprseqtail -> 

State 150:
exprseqtail -> SEMICOLON . expr exprseqtail [ RBRACE ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 151

State 151:
expr -> expr . PLUS expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE SEMICOLON RSUPASSIGN RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
exprseqtail -> SEMICOLON expr . exprseqtail [ RBRACE ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On SEMICOLON shift to state 150
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On exprseqtail shift to state 152
-- On RBRACE reduce production exprseqtail -> 

State 152:
exprseqtail -> SEMICOLON expr exprseqtail . [ RBRACE ]
-- On RBRACE reduce production exprseqtail -> SEMICOLON expr exprseqtail 

State 153:
exprseq -> expr exprseqtail . [ RBRACE ]
-- On RBRACE reduce production exprseq -> expr exprseqtail 

State 154:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> MINUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> MINUS expr 
-- On USEROP reduce production expr -> MINUS expr 
-- On TRUE reduce production expr -> MINUS expr 
-- On TILDE reduce production expr -> MINUS expr 
-- On SEMICOLON reduce production expr -> MINUS expr 
-- On RSUPASSIGN reduce production expr -> MINUS expr 
-- On RPAREN reduce production expr -> MINUS expr 
-- On REPEAT reduce production expr -> MINUS expr 
-- On RBRACKET reduce production expr -> MINUS expr 
-- On RBRACE reduce production expr -> MINUS expr 
-- On RASSIGN reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On OUTERPROD reduce production expr -> MINUS expr 
-- On ORVEC reduce production expr -> MINUS expr 
-- On OR reduce production expr -> MINUS expr 
-- On NULL reduce production expr -> MINUS expr 
-- On NEXT reduce production expr -> MINUS expr 
-- On NEQ reduce production expr -> MINUS expr 
-- On NA reduce production expr -> MINUS expr 
-- On MULT reduce production expr -> MINUS expr 
-- On MODULUS reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On MATRIXMULT reduce production expr -> MINUS expr 
-- On LT reduce production expr -> MINUS expr 
-- On LE reduce production expr -> MINUS expr 
-- On LBRACE reduce production expr -> MINUS expr 
-- On KRONECKERPROD reduce production expr -> MINUS expr 
-- On INTDIV reduce production expr -> MINUS expr 
-- On INT reduce production expr -> MINUS expr 
-- On IF reduce production expr -> MINUS expr 
-- On IDENT reduce production expr -> MINUS expr 
-- On HELP reduce production expr -> MINUS expr 
-- On GT reduce production expr -> MINUS expr 
-- On GE reduce production expr -> MINUS expr 
-- On FUNCTION reduce production expr -> MINUS expr 
-- On FOR reduce production expr -> MINUS expr 
-- On FLOAT reduce production expr -> MINUS expr 
-- On FALSE reduce production expr -> MINUS expr 
-- On EQEQ reduce production expr -> MINUS expr 
-- On EOF reduce production expr -> MINUS expr 
-- On DIV reduce production expr -> MINUS expr 
-- On COMPLEX reduce production expr -> MINUS expr 
-- On COMMA reduce production expr -> MINUS expr 
-- On COLON reduce production expr -> MINUS expr 
-- On BREAK reduce production expr -> MINUS expr 
-- On BANG reduce production expr -> MINUS expr 
-- On ANDVEC reduce production expr -> MINUS expr 
-- On AND reduce production expr -> MINUS expr 

State 155:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> PLUS expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LBRACKET shift to state 50
-- On EXP shift to state 66
-- On ATTRIBUTE shift to state 68
-- On WHILE reduce production expr -> PLUS expr 
-- On USEROP reduce production expr -> PLUS expr 
-- On TRUE reduce production expr -> PLUS expr 
-- On TILDE reduce production expr -> PLUS expr 
-- On SEMICOLON reduce production expr -> PLUS expr 
-- On RSUPASSIGN reduce production expr -> PLUS expr 
-- On RPAREN reduce production expr -> PLUS expr 
-- On REPEAT reduce production expr -> PLUS expr 
-- On RBRACKET reduce production expr -> PLUS expr 
-- On RBRACE reduce production expr -> PLUS expr 
-- On RASSIGN reduce production expr -> PLUS expr 
-- On PLUS reduce production expr -> PLUS expr 
-- On OUTERPROD reduce production expr -> PLUS expr 
-- On ORVEC reduce production expr -> PLUS expr 
-- On OR reduce production expr -> PLUS expr 
-- On NULL reduce production expr -> PLUS expr 
-- On NEXT reduce production expr -> PLUS expr 
-- On NEQ reduce production expr -> PLUS expr 
-- On NA reduce production expr -> PLUS expr 
-- On MULT reduce production expr -> PLUS expr 
-- On MODULUS reduce production expr -> PLUS expr 
-- On MINUS reduce production expr -> PLUS expr 
-- On MATRIXMULT reduce production expr -> PLUS expr 
-- On LT reduce production expr -> PLUS expr 
-- On LE reduce production expr -> PLUS expr 
-- On LBRACE reduce production expr -> PLUS expr 
-- On KRONECKERPROD reduce production expr -> PLUS expr 
-- On INTDIV reduce production expr -> PLUS expr 
-- On INT reduce production expr -> PLUS expr 
-- On IF reduce production expr -> PLUS expr 
-- On IDENT reduce production expr -> PLUS expr 
-- On HELP reduce production expr -> PLUS expr 
-- On GT reduce production expr -> PLUS expr 
-- On GE reduce production expr -> PLUS expr 
-- On FUNCTION reduce production expr -> PLUS expr 
-- On FOR reduce production expr -> PLUS expr 
-- On FLOAT reduce production expr -> PLUS expr 
-- On FALSE reduce production expr -> PLUS expr 
-- On EQEQ reduce production expr -> PLUS expr 
-- On EOF reduce production expr -> PLUS expr 
-- On DIV reduce production expr -> PLUS expr 
-- On COMPLEX reduce production expr -> PLUS expr 
-- On COMMA reduce production expr -> PLUS expr 
-- On COLON reduce production expr -> PLUS expr 
-- On BREAK reduce production expr -> PLUS expr 
-- On BANG reduce production expr -> PLUS expr 
-- On ANDVEC reduce production expr -> PLUS expr 
-- On AND reduce production expr -> PLUS expr 

State 156:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> REPEAT expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> REPEAT expr 
-- On TRUE reduce production expr -> REPEAT expr 
-- On SEMICOLON reduce production expr -> REPEAT expr 
-- On RPAREN reduce production expr -> REPEAT expr 
-- On REPEAT reduce production expr -> REPEAT expr 
-- On RBRACKET reduce production expr -> REPEAT expr 
-- On RBRACE reduce production expr -> REPEAT expr 
-- On NULL reduce production expr -> REPEAT expr 
-- On NEXT reduce production expr -> REPEAT expr 
-- On NA reduce production expr -> REPEAT expr 
-- On LBRACE reduce production expr -> REPEAT expr 
-- On INT reduce production expr -> REPEAT expr 
-- On IF reduce production expr -> REPEAT expr 
-- On IDENT reduce production expr -> REPEAT expr 
-- On HELP reduce production expr -> REPEAT expr 
-- On FUNCTION reduce production expr -> REPEAT expr 
-- On FOR reduce production expr -> REPEAT expr 
-- On FLOAT reduce production expr -> REPEAT expr 
-- On FALSE reduce production expr -> REPEAT expr 
-- On EOF reduce production expr -> REPEAT expr 
-- On COMPLEX reduce production expr -> REPEAT expr 
-- On COMMA reduce production expr -> REPEAT expr 
-- On BREAK reduce production expr -> REPEAT expr 
-- On BANG reduce production expr -> REPEAT expr 

State 157:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> TILDE expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> TILDE expr 
-- On TRUE reduce production expr -> TILDE expr 
-- On TILDE reduce production expr -> TILDE expr 
-- On SEMICOLON reduce production expr -> TILDE expr 
-- On RSUPASSIGN reduce production expr -> TILDE expr 
-- On RPAREN reduce production expr -> TILDE expr 
-- On REPEAT reduce production expr -> TILDE expr 
-- On RBRACKET reduce production expr -> TILDE expr 
-- On RBRACE reduce production expr -> TILDE expr 
-- On RASSIGN reduce production expr -> TILDE expr 
-- On NULL reduce production expr -> TILDE expr 
-- On NEXT reduce production expr -> TILDE expr 
-- On NA reduce production expr -> TILDE expr 
-- On LBRACE reduce production expr -> TILDE expr 
-- On INT reduce production expr -> TILDE expr 
-- On IF reduce production expr -> TILDE expr 
-- On IDENT reduce production expr -> TILDE expr 
-- On HELP reduce production expr -> TILDE expr 
-- On FUNCTION reduce production expr -> TILDE expr 
-- On FOR reduce production expr -> TILDE expr 
-- On FLOAT reduce production expr -> TILDE expr 
-- On FALSE reduce production expr -> TILDE expr 
-- On EOF reduce production expr -> TILDE expr 
-- On COMPLEX reduce production expr -> TILDE expr 
-- On COMMA reduce production expr -> TILDE expr 
-- On BREAK reduce production expr -> TILDE expr 
-- On BANG reduce production expr -> TILDE expr 

State 158:
expr -> expr . PLUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
expr -> WHILE LPAREN expr . RPAREN expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ USEROP TILDE RSUPASSIGN RPAREN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RPAREN shift to state 159
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94

State 159:
expr -> WHILE LPAREN expr RPAREN . expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On WHILE shift to state 1
-- On TRUE shift to state 3
-- On TILDE shift to state 4
-- On REPEAT shift to state 5
-- On PLUS shift to state 6
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NA shift to state 9
-- On MINUS shift to state 10
-- On LBRACE shift to state 11
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 19
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On COMPLEX shift to state 30
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ident shift to state 33
-- On expr shift to state 160

State 160:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> WHILE LPAREN expr RPAREN expr . [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE SEMICOLON RSUPASSIGN RPAREN REPEAT RBRACKET RBRACE RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COMMA COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
-- On USEROP shift to state 36
-- On TILDE shift to state 42
-- On RSUPASSIGN shift to state 54
-- On RASSIGN shift to state 56
-- On PLUS shift to state 44
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NEQ shift to state 60
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 78
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On HELP shift to state 98
-- On GT shift to state 86
-- On GE shift to state 88
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COLON shift to state 70
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On WHILE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On USEROP reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On TRUE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On TILDE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On SEMICOLON reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On RSUPASSIGN reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On RPAREN reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On REPEAT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On RBRACKET reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On RBRACE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On RASSIGN reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On PLUS reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On OUTERPROD reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On ORVEC reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On OR reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On NULL reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On NEXT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On NEQ reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On NA reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On MULT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On MODULUS reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On MINUS reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On MATRIXMULT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On LT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On LPAREN reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On LISTSUBSET reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On LE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On LBRACKET reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On LBRACE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On KRONECKERPROD reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On INTDIV reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On INT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On IF reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On IDENT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On HELP reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On GT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On GE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On FUNCTION reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On FOR reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On FLOAT reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On FALSE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On EXP reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On EQEQ reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On EOF reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On DIV reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On COMPLEX reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On COMMA reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On COLON reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On BREAK reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On BANG reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On ATTRIBUTE reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On ANDVEC reduce production expr -> WHILE LPAREN expr RPAREN expr 
-- On AND reduce production expr -> WHILE LPAREN expr RPAREN expr 
** Conflict on USEROP TILDE RSUPASSIGN RASSIGN PLUS OUTERPROD ORVEC OR NEQ MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET KRONECKERPROD INTDIV HELP GT GE EXP EQEQ DIV COLON ATTRIBUTE ANDVEC AND

State 161:
program' -> program . [ # ]
-- On # accept program

State 162:
program -> exprs . EOF [ # ]
-- On EOF shift to state 163

State 163:
program -> exprs EOF . [ # ]
-- On # reduce production program -> exprs EOF 

State 164:
expr -> expr . PLUS expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MINUS expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MULT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . DIV expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EXP expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . GE expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LE expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . EQEQ expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . NEQ expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . AND expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ANDVEC expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OR expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ORVEC expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MODULUS expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . INTDIV expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . MATRIXMULT expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . OUTERPROD expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . KRONECKERPROD expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RASSIGN ident [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . RSUPASSIGN ident [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . TILDE expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . HELP expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . ATTRIBUTE IDENT [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . COLON expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET args RBRACKET [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LBRACKET LBRACKET args RBRACKET RBRACKET [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LISTSUBSET IDENT [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . USEROP expr [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
expr -> expr . LPAREN args RPAREN [ WHILE USEROP TRUE TILDE RSUPASSIGN REPEAT RASSIGN PLUS OUTERPROD ORVEC OR NULL NEXT NEQ NA MULT MODULUS MINUS MATRIXMULT LT LPAREN LISTSUBSET LE LBRACKET LBRACE KRONECKERPROD INTDIV INT IF IDENT HELP GT GE FUNCTION FOR FLOAT FALSE EXP EQEQ EOF DIV COMPLEX COLON BREAK BANG ATTRIBUTE ANDVEC AND ]
exprs -> expr . exprs [ EOF ]
-- On WHILE shift to state 1
-- On USEROP shift to state 36
-- On TRUE shift to state 3
-- On TILDE shift to state 137
-- On RSUPASSIGN shift to state 54
-- On REPEAT shift to state 5
-- On RASSIGN shift to state 56
-- On PLUS shift to state 139
-- On OUTERPROD shift to state 46
-- On ORVEC shift to state 58
-- On OR shift to state 96
-- On NULL shift to state 7
-- On NEXT shift to state 8
-- On NEQ shift to state 60
-- On NA shift to state 9
-- On MULT shift to state 62
-- On MODULUS shift to state 64
-- On MINUS shift to state 141
-- On MATRIXMULT shift to state 72
-- On LT shift to state 82
-- On LPAREN shift to state 38
-- On LISTSUBSET shift to state 48
-- On LE shift to state 84
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 11
-- On KRONECKERPROD shift to state 74
-- On INTDIV shift to state 76
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 14
-- On HELP shift to state 143
-- On GT shift to state 86
-- On GE shift to state 88
-- On FUNCTION shift to state 20
-- On FOR shift to state 24
-- On FLOAT shift to state 28
-- On FALSE shift to state 29
-- On EXP shift to state 66
-- On EQEQ shift to state 90
-- On DIV shift to state 80
-- On COMPLEX shift to state 30
-- On COLON shift to state 70
-- On BREAK shift to state 31
-- On BANG shift to state 32
-- On ATTRIBUTE shift to state 68
-- On ANDVEC shift to state 92
-- On AND shift to state 94
-- On ident shift to state 33
-- On exprs shift to state 165
-- On expr shift to state 164
-- On EOF reduce production exprs -> 

State 165:
exprs -> expr exprs . [ EOF ]
-- On EOF reduce production exprs -> expr exprs 


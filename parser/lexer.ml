# 2 "lexer.mll"
  
# 4 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\218\255\222\255\224\255\003\000\001\000\004\000\005\000\
    \007\000\009\000\241\255\242\255\243\255\001\000\245\255\246\255\
    \247\255\248\255\007\000\250\255\251\255\252\255\253\255\254\255\
    \255\255\008\000\220\255\223\255\007\000\011\000\012\000\013\000\
    \240\255\239\255\238\255\237\255\236\255\008\000\226\255\231\255\
    \221\255\232\255\233\255\229\255\227\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\027\000\025\000\036\000\021\000\
    \020\000\255\255\255\255\255\255\255\255\011\000\255\255\255\255\
    \255\255\255\255\006\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\030\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\016\000\000\000\000\000\003\000\009\000\005\000\043\000\
    \024\000\023\000\012\000\017\000\036\000\018\000\032\000\011\000\
    \035\000\034\000\033\000\030\000\038\000\040\000\000\000\000\000\
    \031\000\000\000\013\000\027\000\008\000\006\000\007\000\014\000\
    \002\000\042\000\041\000\037\000\039\000\025\000\026\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\022\000\000\000\021\000\010\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \029\000\000\000\000\000\020\000\004\000\019\000\015\000\044\000\
    \000\000\028\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000\000\000\005\000\
    \000\000\000\000\000\000\000\000\028\000\000\000\009\000\000\000\
    \029\000\030\000\031\000\009\000\008\000\037\000\255\255\255\255\
    \009\000\255\255\000\000\013\000\000\000\000\000\000\000\000\000\
    \000\000\006\000\007\000\008\000\008\000\018\000\025\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \009\000\255\255\255\255\000\000\000\000\000\000\000\000\004\000\
    \255\255\009\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec tokenize lexbuf =
    __ocaml_lex_tokenize_rec lexbuf 0
and __ocaml_lex_tokenize_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 77 "lexer.mll"
              ( LPAREN )
# 118 "lexer.ml"

  | 1 ->
# 78 "lexer.mll"
              ( RPAREN )
# 123 "lexer.ml"

  | 2 ->
# 80 "lexer.mll"
              ( LBRACKET )
# 128 "lexer.ml"

  | 3 ->
# 81 "lexer.mll"
              ( RBRACKET )
# 133 "lexer.ml"

  | 4 ->
# 83 "lexer.mll"
              ( LBRACE )
# 138 "lexer.ml"

  | 5 ->
# 84 "lexer.mll"
              ( RBRACE )
# 143 "lexer.ml"

  | 6 ->
# 87 "lexer.mll"
              ( MINUS )
# 148 "lexer.ml"

  | 7 ->
# 88 "lexer.mll"
              ( PLUS )
# 153 "lexer.ml"

  | 8 ->
# 89 "lexer.mll"
              ( UNOT )
# 158 "lexer.ml"

  | 9 ->
# 90 "lexer.mll"
              ( TILDE )
# 163 "lexer.ml"

  | 10 ->
# 91 "lexer.mll"
              ( HELP )
# 168 "lexer.ml"

  | 11 ->
# 92 "lexer.mll"
              ( SEQUENCE )
# 173 "lexer.ml"

  | 12 ->
# 93 "lexer.mll"
              ( MULT )
# 178 "lexer.ml"

  | 13 ->
# 94 "lexer.mll"
              ( DIV )
# 183 "lexer.ml"

  | 14 ->
# 95 "lexer.mll"
              ( EXP )
# 188 "lexer.ml"

  | 15 ->
# 96 "lexer.mll"
              ( MODULUS )
# 193 "lexer.ml"

  | 16 ->
# 97 "lexer.mll"
              ( INTDIVISION )
# 198 "lexer.ml"

  | 17 ->
# 98 "lexer.mll"
              ( MATRIXMULT )
# 203 "lexer.ml"

  | 18 ->
# 99 "lexer.mll"
              ( OUTERPROD )
# 208 "lexer.ml"

  | 19 ->
# 100 "lexer.mll"
              ( KRONECKERPROD )
# 213 "lexer.ml"

  | 20 ->
# 101 "lexer.mll"
              ( LT )
# 218 "lexer.ml"

  | 21 ->
# 102 "lexer.mll"
              ( GT )
# 223 "lexer.ml"

  | 22 ->
# 103 "lexer.mll"
              ( EQ )
# 228 "lexer.ml"

  | 23 ->
# 104 "lexer.mll"
              ( GE )
# 233 "lexer.ml"

  | 24 ->
# 105 "lexer.mll"
              ( LE )
# 238 "lexer.ml"

  | 25 ->
# 106 "lexer.mll"
              ( ANDVEC )
# 243 "lexer.ml"

  | 26 ->
# 107 "lexer.mll"
              ( ANDNOVEC )
# 248 "lexer.ml"

  | 27 ->
# 108 "lexer.mll"
              ( ORVEC )
# 253 "lexer.ml"

  | 28 ->
# 109 "lexer.mll"
              ( ORNOVEC )
# 258 "lexer.ml"

  | 29 ->
# 110 "lexer.mll"
              ( LASSIGN )
# 263 "lexer.ml"

  | 30 ->
# 111 "lexer.mll"
              ( RASSIGN )
# 268 "lexer.ml"

  | 31 ->
# 112 "lexer.mll"
              ( LISTSUBSET )
# 273 "lexer.ml"

  | 32 ->
# 115 "lexer.mll"
              ( NAMESPACE )
# 278 "lexer.ml"

  | 33 ->
# 116 "lexer.mll"
              ( ATTRIBUTE )
# 283 "lexer.ml"

  | 34 ->
# 117 "lexer.mll"
              ( LSUPASSIGN )
# 288 "lexer.ml"

  | 35 ->
# 118 "lexer.mll"
              ( RSUPASSIGN )
# 293 "lexer.ml"

  | 36 ->
# 119 "lexer.mll"
              ( ASSIGN )
# 298 "lexer.ml"

  | 37 ->
# 125 "lexer.mll"
              ( EOF )
# 303 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_tokenize_rec lexbuf __ocaml_lex_state

;;

